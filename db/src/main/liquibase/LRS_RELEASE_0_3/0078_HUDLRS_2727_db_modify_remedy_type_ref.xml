<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0001" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE drop constraint DEFECT_REMEDY_TYPE_FK_REMEDY_TYPE_ID
		]]>
        </sql>
    </changeSet>
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0002" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table RVW_LVL_FINDING drop constraint RVW_LVL_FINDING_FK_REMEDY_TYPE_ID
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0003" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE add DESCRIPTION varchar(30) null
		]]>
        </sql>
    </changeSet>		
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0004" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update DEFECT_REMEDY_TYPE
			set DESCRIPTION = b.REMEDY_TYPE_DESCRIPTION
			from DEFECT_REMEDY_TYPE a,
			     REMEDY_TYPE_REF b
			where a.REMEDY_TYPE_ID = b.REMEDY_TYPE_ID
		]]>
        </sql>
    </changeSet>
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0005" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE add ORDER_NUMBER int null
		]]>
        </sql>
    </changeSet>
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0006" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update DEFECT_REMEDY_TYPE
			set ORDER_NUMBER = 1
			where DESCRIPTION = 'Borrower Refund'
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0007" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update DEFECT_REMEDY_TYPE
			set ORDER_NUMBER = 2
			where DESCRIPTION = 'Principal Reduction'
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0008" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update DEFECT_REMEDY_TYPE
			set ORDER_NUMBER = 3
			where DESCRIPTION = 'Reimburse FHA'
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0009" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table RVW_LVL_FINDING add constraint RVW_LVL_FINDING_FK_REMEDY_TYPE_ID_DEFECT_ID foreign key (DEFECT_ID,REMEDY_TYPE_ID) references DEFECT_REMEDY_TYPE(DEFECT_ID,REMEDY_TYPE_ID)
		]]>
        </sql>
    </changeSet>		
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0010" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			drop table REMEDY_TYPE_REF
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0011" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update dict_metadata_field
			set entity_name = 'Defect Remedy Type',
			    db_column = 'DESCRIPTION'
			where entity_name = 'Remedy Type Reference'
			  and db_column = 'REMEDY_TYPE_DESCRIPTION'
		
			update dict_metadata_field
			set entity_name = 'Defect Remedy Type',
			    db_column = 'ORDER_NUMBER',
				field_name = 'Order Number',
				display_name = 'Order Number'
			where entity_name = 'Remedy Type Reference'
			  and db_column = 'CODE'		
		
			delete from dict_metadata_field 
			where entity_name = 'Remedy Type Reference'
			
			delete from dict_metadata_entity
			where entity_name = 'Remedy Type Reference'			
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0012" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE add CODE varchar(16) null
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0013" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update DEFECT_REMEDY_TYPE
			set CODE = '01'
			where DESCRIPTION = 'Borrower Refund'

			update DEFECT_REMEDY_TYPE
			set CODE = '02'
			where DESCRIPTION = 'Principal Reduction'

			update DEFECT_REMEDY_TYPE
			set CODE = '03'
			where DESCRIPTION = 'Reimburse FHA'	

			insert into DICT_METADATA_FIELD(ENTITY_NAME, FIELD_NAME, DB_COLUMN, CREATED_BY, CREATED_TS, DISPLAY_NAME)values('Defect Remedy Type','Code','CODE','C20225',getdate(),'Code')			
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0014" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE alter column CODE varchar(16) not null
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0015" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE add constraint REMEDY_TYPE_ID_GUID default newid() for REMEDY_TYPE_ID
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0016" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			ALTER procedure sp_create_qa_model(
				@from_qa_model_id uniqueidentifier,
				@new_model_name varchar(30),
				@description varchar(255),
				@login_credential char(6)
			) as
				declare @to_qa_model_id uniqueidentifier

				insert into qa_model(
					model_name,
					version_num,
					description,
					created_by,
					created_ts,
					updated_by,
					updated_ts,				
					qa_model_status_id
				)
				values (
					@new_model_name,
					(select max(version_num) + 1 from qa_model),
					@description,
					@login_credential,
					getdate(),
					@login_credential,
					getdate(),				
					(select qa_model_status_id from qa_model_status_ref where code = 'D')
				)

				select @to_qa_model_id = qa_model_id
				from qa_model
				where version_num = (select max(version_num) from qa_model)

				insert into DICT_METADATA_FIELD_MODEL(
					ENTITY_NAME,
					FIELD_NAME,
					QA_MODEL_ID,
					CREATED_BY,
					CREATED_TS,
					ORDER_NUMBER
				)
				select 
					ENTITY_NAME,
					FIELD_NAME,
					@to_qa_model_id,
					@login_credential,
					getdate(),
					ORDER_NUMBER
				from DICT_METADATA_FIELD_MODEL 
				where QA_MODEL_ID = @from_qa_model_id

				create table #t_defect(
					new_defect_id uniqueidentifier null default newid(),
					old_defect_id uniqueidentifier null,
					defect_cd varchar(16) null,
					description varchar(150) null,
					relative_order int null
				)

				insert into #t_defect(
					old_defect_id,
					defect_cd,
					description,
					relative_order
				)
				select
					defect_id,
					defect_cd,
					description,
					relative_order
				from defect
				where qa_model_id = @from_qa_model_id

				insert into defect(
					defect_id,
					defect_cd,
					description,
					relative_order,
					qa_model_id,
					created_by,
					created_ts
				)
				select 
					new_defect_id,
					defect_cd,
					description,
					relative_order,
					@to_qa_model_id,
					@login_credential,
					getdate()
				from #t_defect

				insert into DICT_METADATA_FIELD_DEFECT(
					ENTITY_NAME,
					FIELD_NAME,
					DEFECT_ID,
					DEFECT_CD,
					ORDER_NUMBER,
					CREATED_BY,
					CREATED_TS
				)
				select 
					m.ENTITY_NAME,
					m.FIELD_NAME,
					d.new_DEFECT_ID,
					m.DEFECT_CD,
					m.ORDER_NUMBER,
					@login_credential,
					getdate()
				from DICT_METADATA_FIELD_DEFECT m, #t_defect d
				where m.DEFECT_ID = d.old_defect_id

				insert into REVIEW_TYPE_DEFECT(
					REVIEW_TYPE_ID,
					DEFECT_ID,
					ORDER_NUMBER,
					CREATED_BY,
					CREATED_TS
				)
				select 
					r.REVIEW_TYPE_ID,
					d.new_DEFECT_ID,
					ORDER_NUMBER,
					@login_credential,
					getdate()
				from REVIEW_TYPE_DEFECT r, #t_defect d
				where r.DEFECT_ID = d.old_defect_id	

				insert into defect_remedy_type(
					DEFECT_ID,
					DESCRIPTION,
					ORDER_NUMBER,
					CODE,
					created_by,
					created_ts
				)
				select
					d.new_defect_id,
					dr.DESCRIPTION,
					dr.ORDER_NUMBER,
					dr.CODE,
					@login_credential,
					getdate()
				from defect_remedy_type dr, #t_defect d
				where dr.DEFECT_ID = d.old_defect_id							

				create table #t_defect_cause(
					new_defect_cause_id uniqueidentifier null default newid(),
					old_defect_cause_id uniqueidentifier null,
					defect_cause_cd varchar(16) null,
					new_defect_id uniqueidentifier null,
					defect_cd varchar(16) null,
					description varchar(150) null,
					relative_order int
				)
													   
				insert into #t_defect_cause(
					old_defect_cause_id,
					defect_cause_cd,
					new_defect_id,
					defect_cd,
					description,
					relative_order
				)
				select 
					dc.defect_cause_id,
					dc.defect_cause_cd,
					d.new_defect_id,
					d.defect_cd,
					dc.description, 
					dc.relative_order
				from defect_cause dc, #t_defect d
				where dc.defect_id = d.old_defect_id

				insert into defect_cause(
					defect_cause_id,
					defect_cause_cd,
					description,
					defect_id,
					defect_cd,
					relative_order,
					created_by,
					created_ts
				)
				select  
					new_defect_cause_id,
					defect_cause_cd,
					description,
					new_defect_id,
					defect_cd,
					relative_order,
					@login_credential,
					getdate()
				from #t_defect_cause 

				create table #t_defect_source(
					new_defect_source_id uniqueidentifier null default newid(),
					old_defect_source_id uniqueidentifier null,
					defect_source_cd varchar(16) null,
					new_defect_id uniqueidentifier null,
					defect_cd varchar(16) null,
					description varchar(150) null,
					relative_order int
				)
													   
				insert into #t_defect_source(
					old_defect_source_id,
					defect_source_cd,
					new_defect_id,
					defect_cd,
					description,
					relative_order
				)
				select 
					ds.defect_source_id,
					ds.defect_source_cd,
					d.new_defect_id,
					d.defect_cd,
					ds.description,
					ds.relative_order      
				from defect_source ds, #t_defect d
				where ds.defect_id = d.old_defect_id

				insert into defect_source(
					defect_source_id,
					defect_source_cd,
					description,
					defect_id,
					defect_cd,
					created_by,
					created_ts,
					relative_order
				)
				select 
					new_defect_source_id,
					defect_source_cd,
					description,
					new_defect_id, 
					defect_cd,
					@login_credential,
					getdate(),
					relative_order
				from #t_defect_source 

				create table #t_defect_severity(
					new_defect_severity_id uniqueidentifier null default newid(),
					old_defect_severity_id uniqueidentifier null,
					severity_tier_cd varchar(16) null,
					description varchar(1024) null,
					new_defect_id uniqueidentifier null,
					defect_cd varchar(16) null,
					relative_order int null,
					example_text varchar(1024) null
				)
													   
				insert into #t_defect_severity(
					old_defect_severity_id,
					severity_tier_cd,
					description,
					new_defect_id,
					defect_cd,
					relative_order,
					example_text
				)
				select 
					ds.defect_severity_id,
					ds.severity_tier_cd,
					ds.description,
					d.new_defect_id,
					d.defect_cd,
					ds.relative_order,
					ds.example_text
				from defect_severity ds, #t_defect d
				where ds.defect_id = d.old_defect_id

				insert into defect_severity(
					defect_severity_id,
					severity_tier_cd,
					description,
					defect_id,
					defect_cd,
					created_by,
					created_ts,
					relative_order,
					example_text
				)
				select 
					new_defect_severity_id,
					severity_tier_cd,
					description,
					new_defect_id, 
					defect_cd,
					@login_credential,
					getdate(),
					relative_order,
					example_text
				from #t_defect_severity 

				insert into finding_rating_rule(
					defect_id,
					defect_cause_id,
					defect_source_id,
					unacceptable_rating_threshold
				)
				select
					c.new_defect_id,
					c.new_defect_cause_id,
					s.new_defect_source_id,
					fr.unacceptable_rating_threshold
				from
					#t_defect_cause c,
					#t_defect_source s,
					finding_rating_rule fr
				where fr.defect_cause_id = c.old_defect_cause_id and fr.defect_source_id = s.old_defect_source_id 

				create table #t_qatree(
					new_qatree_id uniqueidentifier null default newid(),
					old_qatree_id uniqueidentifier null,
					new_qa_model_id uniqueidentifier not null,
					new_defect_id uniqueidentifier null,
					enable_pre_qual_question_ind char(1) null
				)
									   
				insert into #t_qatree(
					old_qatree_id,
					new_qa_model_id,
					new_defect_id,
					enable_pre_qual_question_ind)
				select
					q.qatree_id,
					@to_qa_model_id,
					t.new_defect_id,
					enable_pre_qual_question_ind
				from #t_defect t,qatree q
				where t.old_defect_id = q.defect_id

				insert into qatree(
					qatree_id,
					created_by,
					created_ts,
					qa_model_id,
					defect_id,
					enable_pre_qual_question_ind)  
				select 
					new_qatree_id,
					@login_credential,
					getdate(),
					new_qa_model_id,
					new_defect_id,
					enable_pre_qual_question_ind
				from #t_qatree 

				create table #t_outcome(
					new_qatree_outcome_id uniqueidentifier null default newid(),
					old_qatree_outcome_id uniqueidentifier null,
					new_defect_id uniqueidentifier null
				)

				insert into #t_outcome(
					old_qatree_outcome_id,
					new_defect_id
				)
				select
					o.qatree_outcome_id,
					t.new_defect_id
				from #t_defect t,qatree_outcome o
				where t.old_defect_id = o.defect_id

				insert into qatree_outcome(
					qatree_outcome_id,
					defect_id,
					created_by,
					created_ts,
					source_filter_question_id
				)
				select
					new_qatree_outcome_id,
					new_defect_id,
					@login_credential,
					getdate(),
					q.source_filter_question_id
				from #t_outcome t,qatree_outcome q
				where t.old_qatree_outcome_id = q.qatree_outcome_id

				insert into qatree_outcome_defect_cause(
					defect_cause_id,
					qatree_outcome_id,
					created_by,
					created_ts
				)
				select
					tc.new_defect_cause_id,
					t.new_qatree_outcome_id,
					@login_credential,
					getdate()
				from
					#t_outcome t,
					#t_defect_cause tc,
					qatree_outcome_defect_cause c
				where
					t.old_qatree_outcome_id = c.qatree_outcome_id
					and c.defect_cause_id = tc.old_defect_cause_id

				insert into qatree_outcome_defect_source(
					defect_source_id,
					qatree_outcome_id,
					created_by,
					created_ts
				)
				select
					tc.new_defect_source_id,
					t.new_qatree_outcome_id,
					@login_credential,
					getdate()
				from
					#t_outcome t,
					#t_defect_source tc,
					qatree_outcome_defect_source c
				where
					t.old_qatree_outcome_id = c.qatree_outcome_id 
					and c.defect_source_id = tc.old_defect_source_id

				insert into qatree_outcome_defect_severity(
					defect_severity_id,
					qatree_outcome_id,
					created_by,
					created_ts
				)
				select
					tc.new_defect_severity_id,
					t.new_qatree_outcome_id,
					@login_credential,
					getdate()
				from
					#t_outcome t,
					#t_defect_severity tc,
					qatree_outcome_defect_severity c
				where
					t.old_qatree_outcome_id = c.qatree_outcome_id 
					and c.defect_severity_id = tc.old_defect_severity_id

				create table #t_question(
					new_question_id uniqueidentifier null default newid(),
					old_question_id uniqueidentifier null,
					new_qatree_id uniqueidentifier null
				)

				insert into #t_question(
					old_question_id,
					new_qatree_id
				)
				select
					qu.question_id,
					qa.new_qatree_id 
				from
					qatree_question qu,
					#t_qatree qa
				where qu.qatree_id = qa.old_qatree_id

				insert into QUESTION_REFERENCE(
					QUESTION_ID,
					QUESTION_DESCRIPTION,
					VALUE_TO_TRIGGER_ACTION,
					RESPONSE_TYPE,
					ANSWER_VALUES,
					created_by,
					created_ts
				)
				select   
					a.new_QUESTION_ID,
					QUESTION_DESCRIPTION,
					VALUE_TO_TRIGGER_ACTION,
					RESPONSE_TYPE,
					ANSWER_VALUES,
					@login_credential,
					getdate()
				from
					#t_question a,
					QUESTION_REFERENCE b
				where a.old_question_id = b.QUESTION_ID

				insert into qatree_question(
					question_id,
					qatree_id,
					question_number,
					question_reference,
					qatree_outcome_id,
					--parent_question_id,
					created_by,
					created_ts,
					order_number
				)
				select
					t.new_question_id,
					t.new_qatree_id,
					q.question_number,
					q.question_reference,
					o.new_qatree_outcome_id,
					--q.parent_question_id,
					@login_credential,
					getdate(),
					q.order_number
				from #t_question t
				inner join qatree_question q
					on t.old_question_id = q.question_id 
				left outer join #t_outcome o
					on q.qatree_outcome_id = o.old_qatree_outcome_id

				insert into QA_MODEL_PREQUAL(
					QUESTION_ID,
					PRE_QUAL_POTENTIAL_ANSWER_CD,
					QUESTION_REF_ID_CSV,
					description
				)
				select 
					a.new_QUESTION_ID,
					PRE_QUAL_POTENTIAL_ANSWER_CD,
					QUESTION_REF_ID_CSV,
					b.description
				from
					#t_question a,
					QA_MODEL_PREQUAL b
				where a.old_question_id = b.QUESTION_ID
												
				update QATREE_QUESTION
				set PARENT_QUESTION_ID = b.new_question_id
				from
					QATREE_QUESTION a,
					#t_question b
				where a.PARENT_QUESTION_ID = b.old_question_id

				update QATREE_OUTCOME
				set SOURCE_FILTER_QUESTION_ID = b.new_question_id
				from
					QATREE_OUTCOME a,
					#t_question b
				where a.SOURCE_FILTER_QUESTION_ID = b.old_question_id

				insert into QATREE_QSTN_CONDITION(
					entity_name,
					field_name,
					question_id,
					qatree_id,
					comparison_values,
					condition_operator,
					created_by,
					created_ts
				)
				select
					entity_name,
					field_name,
					new_question_id,
					new_qatree_id,
					comparison_values,
					condition_operator,
					@login_credential,
					getdate()
				from
					#t_question tq,
					QATREE_QSTN_CONDITION qqc
				where tq.old_question_id = qqc.QUESTION_ID
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0017" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table RVW_LVL_FINDING drop constraint RVW_LVL_FINDING_FK_REMEDY_TYPE_ID_DEFECT_ID			
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0018" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			ALTER TABLE DEFECT_REMEDY_TYPE drop CONSTRAINT REMEDY_TYPE_ID_GUID
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0019" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE drop constraint DEFECT_REMEDY_TYPE_PK
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0020" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE drop column REMEDY_TYPE_ID
		]]>
        </sql>
    </changeSet>		
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0021" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE add DEFECT_REMEDY_TYPE_ID uniqueidentifier not null default newid()
		]]>
        </sql>
    </changeSet>			
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0022" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table DEFECT_REMEDY_TYPE add constraint DEFECT_REMEDY_TYPE_PK	primary key (DEFECT_REMEDY_TYPE_ID)		
		]]>
        </sql>
    </changeSet>		
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0023" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			sp_rename 'RVW_LVL_FINDING.REMEDY_TYPE_ID', 'DEFECT_REMEDY_TYPE_ID', 'column'
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0025" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			update dict_metadata_field
			set db_column = 'DEFECT_REMEDY_TYPE_ID'
			where db_column = 'REMEDY_TYPE_ID'
		]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="astrauss" id="HUDLRS_2727_0026" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
			alter table RVW_LVL_FINDING add constraint RVW_LVL_FINDING_FK_DEFECT_REMEDY_TYPE_ID foreign key (DEFECT_REMEDY_TYPE_ID) references DEFECT_REMEDY_TYPE(DEFECT_REMEDY_TYPE_ID)
		]]>
        </sql>
    </changeSet>	
</databaseChangeLog>    