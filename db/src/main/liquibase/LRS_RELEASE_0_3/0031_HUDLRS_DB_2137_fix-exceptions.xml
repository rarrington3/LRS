<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2137_0001" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
CREATE TABLE REVIEW_PROCESS_EXCEPTION_TYPE_REF(
	REVIEW_PROCESS_EXCEPTION_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
GO
ALTER TABLE REVIEW_PROCESS_EXCEPTION_TYPE_REF ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_TYPE_REF_PK PRIMARY KEY NONCLUSTERED(REVIEW_PROCESS_EXCEPTION_TYPE_ID)
ALTER TABLE REVIEW_PROCESS_EXCEPTION_TYPE_REF ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_TYPE_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO REVIEW_PROCESS_EXCEPTION_TYPE_REF(REVIEW_PROCESS_EXCEPTION_TYPE_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'DISTRIBUTION_OVERFLOW', 'Distribution: Overflow'),
	(NEWID(), 'DISTRIBUTION_BATCH_INFO', 'Distribution: Batch Info'),
	(NEWID(), 'ASSIGNMENT', 'Assignment'),
	(NEWID(), 'REQUEST_PAST_DUE', 'Request Past Due'),
	(NEWID(), 'REQUEST_ERROR', 'Request Error'),
	(NEWID(), 'HQ_ESCALATION', 'HQ Escalation')
GO
EXEC SP_RENAME 'REVIEW_PROCESS_EXCEPTION.EXCEPTION_ID', 'REVIEW_PROCESS_EXCEPTION_ID'
GO
ALTER TABLE REVIEW_PROCESS_EXCEPTION ADD REVIEW_PROCESS_EXCEPTION_TYPE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW_PROCESS_EXCEPTION ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_FK_REVIEW_PROCESS_EXCEPTION_TYPE_ID FOREIGN KEY(REVIEW_PROCESS_EXCEPTION_TYPE_ID) REFERENCES REVIEW_PROCESS_EXCEPTION_TYPE_REF(REVIEW_PROCESS_EXCEPTION_TYPE_ID)
GO
UPDATE E
SET E.REVIEW_PROCESS_EXCEPTION_TYPE_ID = T.REVIEW_PROCESS_EXCEPTION_TYPE_ID
FROM REVIEW_PROCESS_EXCEPTION E
INNER JOIN REVIEW_PROCESS_EXCEPTION_TYPE_REF T ON (T.DESCRIPTION = E.EXCEPTION_TYPE)
GO
ALTER TABLE REVIEW_PROCESS_EXCEPTION ALTER COLUMN REVIEW_PROCESS_EXCEPTION_TYPE_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE REVIEW_PROCESS_EXCEPTION ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_FK_BATCH_ID FOREIGN KEY(BATCH_ID) REFERENCES BATCH(BATCH_ID)
ALTER TABLE REVIEW_PROCESS_EXCEPTION ALTER COLUMN SELECTION_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW_PROCESS_EXCEPTION ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_FK_SELECTION_ID FOREIGN KEY(SELECTION_ID) REFERENCES LOAN_SELECTION(SELECTION_ID)
ALTER TABLE REVIEW_PROCESS_EXCEPTION DROP COLUMN SLCTN_REQ_ID
ALTER TABLE REVIEW_PROCESS_EXCEPTION DROP COLUMN STATUS
ALTER TABLE REVIEW_PROCESS_EXCEPTION DROP COLUMN EXCEPTION_TYPE
GO

CREATE TABLE FHA_MANUAL_SELECTION_REQUEST(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	SELECTION_REASON_ID UNIQUEIDENTIFIER NOT NULL,
	SELECTION_SUB_REASON_ID UNIQUEIDENTIFIER NULL,
	REVIEW_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
	REVIEW_LOCATION_ID UNIQUEIDENTIFIER NULL
)
ALTER TABLE FHA_MANUAL_SELECTION_REQUEST ADD CONSTRAINT FHA_MANUAL_SELECTION_REQUEST_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID)
ALTER TABLE FHA_MANUAL_SELECTION_REQUEST ADD CONSTRAINT FHA_MANUAL_SELECTION_REQUEST_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE FHA_MANUAL_SELECTION_REQUEST ADD CONSTRAINT FHA_MANUAL_SELECTION_REQUEST_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)
ALTER TABLE FHA_MANUAL_SELECTION_REQUEST ADD CONSTRAINT FHA_MANUAL_SELECTION_REQUEST_FK_REVIEW_TYPE_ID FOREIGN KEY(REVIEW_TYPE_ID) REFERENCES REVIEW_TYPE_REF(REVIEW_TYPE_ID)
ALTER TABLE FHA_MANUAL_SELECTION_REQUEST ADD CONSTRAINT FHA_MANUAL_SELECTION_REQUEST_FK_SELECTION_SUB_REASON_ID FOREIGN KEY(SELECTION_SUB_REASON_ID) REFERENCES SELECTION_SUB_REASON_REF(SELECTION_SUB_REASON_ID)
ALTER TABLE FHA_MANUAL_SELECTION_REQUEST ADD CONSTRAINT FHA_MANUAL_SELECTION_REQUEST_FK_REVIEW_LOCATION_ID FOREIGN KEY(REVIEW_LOCATION_ID) REFERENCES REVIEW_LOCATION(REVIEW_LOCATION_ID)
GO

ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST ADD LENDER_ID VARCHAR(5) NOT NULL
GO

ALTER TABLE LOAN_SELECTION_PENDING ADD BATCH_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION_PENDING ADD CONSTRAINT LOAN_SELECTION_PENDING_FK_BATCH_ID FOREIGN KEY(BATCH_ID) REFERENCES BATCH(BATCH_ID)
GO

UPDATE SELECTION_REQUEST SET SELECTION_REQUEST_TYPE_ID = (SELECT SELECTION_REQUEST_TYPE_ID FROM SELECTION_REQUEST_TYPE_REF WHERE CODE = 'FHA_MANUAL')
WHERE (SELECTION_REQUEST_TYPE_ID = (SELECT SELECTION_REQUEST_TYPE_ID FROM SELECTION_REQUEST_TYPE_REF WHERE CODE = 'TEST_CASE'))
GO
DELETE FROM SELECTION_REQUEST_TYPE_REF WHERE CODE = 'TEST_CASE'
GO

EXEC SP_RENAME 'RVW_BATCH_PK', 'BATCH_PK'
EXEC SP_RENAME 'RVW_BATCH_PRSNNL_PK', 'BATCH_PERSONNEL_PK'
EXEC SP_RENAME 'DF_RVW_BATCH_BATCH_ID', 'BATCH_DF_BATCH_ID'
GO

ALTER TABLE BATCH ADD REVIEW_LOCATION_ID UNIQUEIDENTIFIER NULL
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_REVIEW_LOCATION_ID FOREIGN KEY(REVIEW_LOCATION_ID) REFERENCES REVIEW_LOCATION(REVIEW_LOCATION_ID)
GO

INSERT INTO BATCH_STATUS_REF(BATCH_STATUS_ID, CODE, DESCRIPTION) VALUES (NEWID(), 'PENDING_SELECTION', 'Pending Selection')
GO

EXEC SP_RENAME 'tI_RVW_BATCH', 'ti_BATCH'
GO
ALTER TRIGGER tI_BATCH ON BATCH FOR insert AS BEGIN
	DECLARE 
		@MTGEE5 CHAR(5),
		@COUNTER INT,
		@CHAR_COUNTER CHAR(3),
		@YEAR CHAR(4),
		@BATCH_ID UNIQUEIDENTIFIER
						
	SELECT @MTGEE5 = MTGEE5, @BATCH_ID = BATCH_ID FROM INSERTED
						
	SELECT @YEAR = CONVERT(CHAR(4), YEAR(CURRENT_TIMESTAMP) )
						
						
	SELECT @COUNTER = MAX(SUBSTRING(BATCH_REFERENCE_ID, 12, 14))
	FROM BATCH
	WHERE SUBSTRING(BATCH_REFERENCE_ID, 1, 10) = @MTGEE5 + '-' + @YEAR
						
	IF @COUNTER IS NULL
	BEGIN
		SELECT @COUNTER = 1
	END
	ELSE    
	BEGIN
		SELECT @COUNTER = @COUNTER + 1
	END

	SELECT @CHAR_COUNTER = REPLICATE('0', 3 - DATALENGTH(CONVERT(VARCHAR(3),@COUNTER)) ) + CONVERT(VARCHAR(3),@COUNTER)

	UPDATE BATCH
	SET BATCH_REFERENCE_ID = @MTGEE5 + '-' + @YEAR + '-' + @CHAR_COUNTER
	WHERE BATCH_ID = @BATCH_ID
END
GO
		]]>
        </sql>
    </changeSet>
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2137_0002" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('REVIEW_PROCESS_EXCEPTION_TYPE_REF', 'REVIEW_PROCESS_EXCEPTION_TYPE_REF', 'REVIEW_PROCESS_EXCEPTION_TYPE_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION_TYPE_REF')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION_ID' WHERE DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION.EXCEPTION_ID'
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'REVIEW_PROCESS_EXCEPTION_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION')
ALTER TABLE REVIEW_PROCESS_EXCEPTION ALTER COLUMN REVIEW_PROCESS_EXCEPTION_TYPE_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE REVIEW_PROCESS_EXCEPTION ALTER COLUMN SELECTION_ID UNIQUEIDENTIFIER NULL
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'SLCTN_REQ_ID' AND E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'STATUS' AND E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'EXCEPTION_TYPE' AND E.DB_VIEW_OR_TABLE = 'REVIEW_PROCESS_EXCEPTION')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('FHA_MANUAL_SELECTION_REQUEST', 'FHA_MANUAL_SELECTION_REQUEST', 'FHA_MANUAL_SELECTION_REQUEST', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FHA_MANUAL_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REASON_ID', 'SELECTION_REASON_ID', 'SELECTION_REASON_ID', 'SELECTION_REASON_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FHA_MANUAL_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FHA_MANUAL_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_TYPE_ID', 'REVIEW_TYPE_ID', 'REVIEW_TYPE_ID', 'REVIEW_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FHA_MANUAL_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FHA_MANUAL_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'LENDER_ID', 'LENDER_ID', 'LENDER_ID', 'LENDER_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'BATCH_ID', 'BATCH_ID', 'BATCH_ID', 'BATCH_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'BATCH')
		]]>
        </sql>
    </changeSet>
</databaseChangeLog>
