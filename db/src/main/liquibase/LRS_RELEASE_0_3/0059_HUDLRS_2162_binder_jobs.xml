<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2162_0001" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
EXEC SP_RENAME 'JOB_TYPE_REF.CREATED_DT', 'CREATED_TS', 'COLUMN'
EXEC SP_RENAME 'JOB_TYPE_REF.UPDATED_DT', 'UPDATED_TS', 'COLUMN'
			]]>
        </sql>
    </changeSet>
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2162_0002" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
INSERT INTO JOB_TYPE_REF(JOB_TYPE_ID, CODE, DESCRIPTION, CREATED_BY, CREATED_TS, UPDATED_BY, UPDATED_TS) VALUES
    (NEWID(), 'LATE_BINDERS', 'Late Binder Check', 'jchav', CURRENT_TIMESTAMP, 'jchav', CURRENT_TIMESTAMP),
    (NEWID(), 'BINDER_REQUEST', 'Request Binder Delivery', 'jchav', CURRENT_TIMESTAMP, 'jchav', CURRENT_TIMESTAMP),
    (NEWID(), 'BINDER_RECEIPT', 'Binder Receipt Check', 'jchav', CURRENT_TIMESTAMP, 'jchav', CURRENT_TIMESTAMP)
			]]>
        </sql>
    </changeSet>
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2162_0003" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
EXEC SP_RENAME 'REQUESTED_BINDER.SLCTN_REQ_ID', 'REQUESTED_BINDER_ID'
ALTER TABLE REQUESTED_BINDER DROP COLUMN STATUS
ALTER TABLE REQUESTED_BINDER DROP COLUMN BATCH_ID
ALTER TABLE REQUESTED_BINDER ALTER COLUMN SELECTION_ID UNIQUEIDENTIFIER NOT NULL
EXEC SP_RENAME 'REQUESTEDBINDERTOLOANSEL', 'REQUESTED_BINDER_FK_SELECTION_ID'
EXEC SP_RENAME 'QA_MODEL_FK_REQUESTED_BINDER_STATUS_ID', 'REQUESTED_BINDER_FK_REQUESTED_BINDER_STATUS_ID'
			]]>
        </sql>
    </changeSet>
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2162_0004" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
ALTER TABLE MODEL_SCORE DROP COLUMN MODEL_VER_NUM
ALTER TABLE MODEL_SCORE DROP CONSTRAINT MODEL_SCORE_FK_MODEL_ID
ALTER TABLE MODEL_SCORE DROP COLUMN MODEL_ID
			]]>
        </sql>
    </changeSet>
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2162_0005" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
UPDATE LOAN_SELECTION SET PRODUCT_TYPE_ID = (SELECT PRODUCT_TYPE_ID FROM PRODUCT_TYPE_REF WHERE PRODUCT_TYPE_CD = 'PRCHS') WHERE PRODUCT_TYPE_ID IS NULL
ALTER TABLE LOAN_SELECTION ALTER COLUMN PRODUCT_TYPE_ID UNIQUEIDENTIFIER NOT NULL
GO
ALTER TABLE LOAN_SELECTION_PENDING ADD PRODUCT_TYPE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION_PENDING ADD CONSTRAINT LOAN_SELECTION_PENDING_FK_PRODUCT_TYPE_ID FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PRODUCT_TYPE_REF(PRODUCT_TYPE_ID)
GO
UPDATE LOAN_SELECTION_PENDING SET PRODUCT_TYPE_ID = (SELECT PRODUCT_TYPE_ID  FROM PRODUCT_TYPE_REF WHERE PRODUCT_TYPE_CD = 'PRCHS') WHERE PRODUCT_TYPE_ID IS NULL
GO
ALTER TABLE LOAN_SELECTION_PENDING ALTER COLUMN PRODUCT_TYPE_ID UNIQUEIDENTIFIER NOT NULL
GO

ALTER TABLE REVIEW ADD REVIEW_TYPE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_FK_REVIEW_TYPE_ID FOREIGN KEY(REVIEW_TYPE_ID) REFERENCES REVIEW_TYPE_REF(REVIEW_TYPE_ID)
GO
UPDATE R SET R.REVIEW_TYPE_ID = LS.REVIEW_TYPE_ID FROM REVIEW R INNER JOIN LOAN_SELECTION LS ON (LS.SELECTION_ID = R.SELECTION_ID)
GO
ALTER TABLE REVIEW ALTER COLUMN REVIEW_TYPE_ID UNIQUEIDENTIFIER NOT NULL
GO

ALTER TABLE REVIEW ADD PRODUCT_TYPE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_FK_PRODUCT_TYPE_ID FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PRODUCT_TYPE_REF(PRODUCT_TYPE_ID)
GO
UPDATE R SET R.PRODUCT_TYPE_ID = LS.PRODUCT_TYPE_ID FROM REVIEW R INNER JOIN LOAN_SELECTION LS ON (LS.SELECTION_ID = R.SELECTION_ID)
GO

ALTER TABLE REVIEW ADD SELECTION_REASON_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)
GO
UPDATE R SET R.SELECTION_REASON_ID = LS.SELECTION_REASON_ID FROM REVIEW R INNER JOIN LOAN_SELECTION LS ON (LS.SELECTION_ID = R.SELECTION_ID)
GO
ALTER TABLE REVIEW ALTER COLUMN SELECTION_REASON_ID UNIQUEIDENTIFIER NOT NULL
GO
			]]>
        </sql>
    </changeSet>
</databaseChangeLog>
