<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet context="All"  author="jordanchavez@kpmg.com" id="HUDLRS_2434_0001" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
UPDATE F SET
	F.DEFECT_ID          = D.DEFECT_ID,
	F.DEFECT_CAUSE_ID    = DC.DEFECT_CAUSE_ID,
	F.DEFECT_SOURCE_ID   = DS.DEFECT_SOURCE_ID,
	F.DEFECT_SEVERITY_ID = DV.DEFECT_SEVERITY_ID
FROM RVW_LVL_FINDING F
INNER JOIN DEFECT D ON (D.DEFECT_CD = F.DEFECT_CD)
INNER JOIN DEFECT_CAUSE DC ON (DC.DEFECT_CAUSE_CD = F.DEFECT_CAUSE_CD) AND (DC.DEFECT_ID = D.DEFECT_ID)
INNER JOIN DEFECT_SOURCE DS ON (DS.DFCT_SOURCE_CD = F.DFCT_SOURCE_CD) AND (DS.DEFECT_ID = D.DEFECT_ID)
LEFT JOIN DEFECT_SEVERITY DV ON (DV.SEVERITY_TIER_CD = F.SEVERITY_TIER_CD) AND (DV.DEFECT_ID = D.DEFECT_ID)
GO
EXEC SP_RENAME 'RVW_LVL_FINDING.DFCT_SOURCE_CD', 'DEFECT_SOURCE_CD'
ALTER TABLE RVW_LVL_FINDING ALTER COLUMN DEFECT_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE RVW_LVL_FINDING ALTER COLUMN DEFECT_SOURCE_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE RVW_LVL_FINDING ALTER COLUMN DEFECT_CAUSE_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE RVW_LVL_FINDING ALTER COLUMN SEVERITY_TIER_CD INT NOT NULL
EXEC SP_RENAME 'RVWLVLFINDINGFKREMEDYTYPEREF', 'RVW_LVL_FINDING_FK_REMEDY_TYPE_ID'
GO
EXEC SP_RENAME 'FINDING_RATING_RULES_ADMIN', 'FINDING_RATING_RULE'
GO
EXEC SP_RENAME 'FINDING_RATING_RULE.FINDING_RATING_RULES_ID', 'FINDING_RATING_RULE_ID'
EXEC SP_RENAME 'FINDING_RATING_RULES_ADMIN_PK', 'FINDING_RATING_RULE_PK'
EXEC SP_RENAME 'FINDING_RATING_TO_DEFECT', 'FINDING_RATING_RULES_FK_DEFECT_ID'
EXEC SP_RENAME 'FINDING_RATING_TO_CAUSE', 'FINDING_RATING_RULES_FK_DEFECT_CAUSE_ID'
EXEC SP_RENAME 'FINDING_RATING_TO_SOURCE', 'FINDING_RATING_RULES_FK_DEFECT_SOURCE_ID'
GO
ALTER TABLE FINDING_RATING_RULE DROP COLUMN DEFECT_CD
ALTER TABLE FINDING_RATING_RULE DROP COLUMN DEFECT_CAUSE_CD
ALTER TABLE FINDING_RATING_RULE DROP COLUMN DFCT_SOURCE_CD
GO
EXEC SP_RENAME 'DEFECT_SOURCE.DFCT_SOURCE_CD', 'DEFECT_SOURCE_CD'
ALTER TABLE DEFECT_SEVERITY ALTER COLUMN SEVERITY_TIER_CD INT NOT NULL
ALTER TABLE FINDING_RATING_RULE ALTER COLUMN UNACCEPTABLE_RATING_THRESHOLD INT NOT NULL
ALTER TABLE DEFECT DROP COLUMN REVIEW_CATEGORY
GO
EXEC SP_RENAME 'QA_MODEL.MODEL_ID', 'QA_MODEL_ID'
EXEC SP_RENAME 'QA_MODEL_STATUS_REF.MODEL_STATUS_CODE', 'CODE'
GO
ALTER TABLE QA_MODEL_STATUS_REF ADD CONSTRAINT QA_MODEL_STATUS_REF_UQ_CODE UNIQUE(CODE)
EXEC SP_RENAME 'DEFECT.MODEL_ID', 'QA_MODEL_ID'
EXEC SP_RENAME 'DEFECTTOQAMODEL', 'DEFECT_FK_QA_MODEL_ID'
EXEC SP_RENAME 'DICT_METADATA_FIELD_MODEL.MODEL_ID', 'QA_MODEL_ID'
EXEC SP_RENAME 'METADATAFIELDMODELTOMETAFIELD', 'DICT_METADATA_FIELD_MODEL_FK_ENTITY_NAME_FIELD_NAME'
EXEC SP_RENAME 'METADATAFIELDMODELTOMODEL', 'DICT_METADATA_FIELD_MODEL_FK_QA_MODEL_ID'
EXEC SP_RENAME 'QATREE.MODEL_ID', 'QA_MODEL_ID'
GO
ALTER TABLE QATREE ADD CONSTRAINT QATREE_FK_QA_MODEL_ID FOREIGN KEY(QA_MODEL_ID) REFERENCES QA_MODEL(QA_MODEL_ID)
GO
ALTER TABLE SCORING_MODEL DROP CONSTRAINT SCORING_MODEL_UQ_CODE
ALTER TABLE SCORING_MODEL ALTER COLUMN CODE VARCHAR(50) NOT NULL
ALTER TABLE SCORING_MODEL ADD CONSTRAINT SCORING_MODEL_UQ_CODE UNIQUE(CODE)
EXEC SP_RENAME 'SCORING_MODEL.MODEL_ID', 'SCORING_MODEL_ID'
EXEC SP_RENAME 'SCORING_MODEL_VERSION.MODEL_ID', 'SCORING_MODEL_ID'
EXEC SP_RENAME 'SCORING_MODEL_VERSION_FK_MODEL_ID', 'SCORING_MODEL_VERSION_FK_SCORING_MODEL_ID'
EXEC SP_RENAME 'SELECTION_REASON.MODEL_ID', 'SCORING_MODEL_ID'
EXEC SP_RENAME 'SELECTIONPARMTOMOD', 'SELECTION_REASON_FK_SCORING_MODEL_ID'
EXEC SP_RENAME 'SCORING_MODEL_FACTOR.MODEL_ID', 'SCORING_MODEL_ID'
EXEC SP_RENAME 'SCORING_MODEL_FACTOR_FK_MODEL_ID', 'SCORING_MODEL_FACTOR_FK_QA_MODEL_ID'
GO
ALTER TABLE REVIEW ADD QA_MODEL_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_FK_QA_MODEL_ID FOREIGN KEY(QA_MODEL_ID) REFERENCES QA_MODEL(QA_MODEL_ID)
GO
UPDATE R SET R.QA_MODEL_ID = Q.QA_MODEL_ID
FROM REVIEW R
INNER JOIN REVIEW_QATREE RQ ON (RQ.REVIEW_ID = R.REVIEW_ID)
INNER JOIN QATREE Q ON (Q.QATREE_ID = RQ.QATREE_ID)
GO
ALTER TABLE REVIEW ALTER COLUMN QA_MODEL_ID UNIQUEIDENTIFIER NOT NULL
GO
DROP TABLE REVIEW_QATREE
GO
EXEC SP_RENAME 'SUPPRESSED_LENDER', 'LENDER_SUPPRESSION'
EXEC SP_RENAME 'SUPPRESSED_LENDER_PK', 'LENDER_SUPPRESSION_PK'
EXEC SP_RENAME 'INCREASED_SELECT_LENDER', 'LENDER_INCREASED_SELECTION'
EXEC SP_RENAME 'INCREASED_SELECT_LENDER_PK', 'LENDER_INCREASED_SELECTION_PK'
EXEC SP_RENAME 'INCREASED_SELECT_UNDERWRITER', 'UNDERWRITER_INCREASED_SELECTION'
EXEC SP_RENAME 'INCREASED_SELECT_UNDERWRITE_PK', 'UNDERWRITER_INCREASED_SELECTION_PK'
			]]>
        </sql>
    </changeSet>	
    <changeSet context="All"  author="jordanchavez@kpmg.com" id="HUDLRS_2434_0002" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
			<![CDATA[
ALTER procedure [dbo].[sp_create_qa_model](
	@from_qa_model_id uniqueidentifier,
	@new_model_name varchar(30),
	@description varchar(255),
	@login_credential char(6)
) as
	declare @to_qa_model_id uniqueidentifier

	insert into qa_model(
		model_name,
		version_num,
		description,
		created_by,
		created_ts,
		updated_by,
		updated_ts,				
		qa_model_status_id
	)
	values (
		@new_model_name,
		(select max(version_num) + 1 from qa_model),
		@description,
		@login_credential,
		getdate(),
		@login_credential,
		getdate(),				
		(select qa_model_status_id from qa_model_status_ref where code = 'D')
	)

	select @to_qa_model_id = qa_model_id
	from qa_model
	where version_num = (select max(version_num) from qa_model)

	insert into DICT_METADATA_FIELD_MODEL(
		ENTITY_NAME,
		FIELD_NAME,
		QA_MODEL_ID,
		CREATED_BY,
		CREATED_TS,
		ORDER_NUMBER
	)
	select 
		ENTITY_NAME,
		FIELD_NAME,
		@to_qa_model_id,
		@login_credential,
		getdate(),
		ORDER_NUMBER
	from DICT_METADATA_FIELD_MODEL 
	where QA_MODEL_ID = @from_qa_model_id

	create table #t_defect(
		new_defect_id uniqueidentifier null default newid(),
		old_defect_id uniqueidentifier null,
		defect_cd varchar(16) null,
		description varchar(150) null,
		relative_order int null
	)

	insert into #t_defect(
		old_defect_id,
		defect_cd,
		description,
		relative_order
	)
	select
		defect_id,
		defect_cd,
		description,
		relative_order
	from defect
	where qa_model_id = @from_qa_model_id

	insert into defect(
		defect_id,
		defect_cd,
		description,
		relative_order,
		qa_model_id,
		created_by,
		created_ts
	)
	select 
		new_defect_id,
		defect_cd,
		description,
		relative_order,
		@to_qa_model_id,
		@login_credential,
		getdate()
	from #t_defect

	insert into DICT_METADATA_FIELD_DEFECT(
		ENTITY_NAME,
		FIELD_NAME,
		DEFECT_ID,
		DEFECT_CD,
		ORDER_NUMBER,
		CREATED_BY,
		CREATED_TS
	)
	select 
		m.ENTITY_NAME,
		m.FIELD_NAME,
		d.new_DEFECT_ID,
		m.DEFECT_CD,
		m.ORDER_NUMBER,
		@login_credential,
		getdate()
	from DICT_METADATA_FIELD_DEFECT m, #t_defect d
	where m.DEFECT_ID = d.old_defect_id

	insert into REVIEW_TYPE_DEFECT(
		REVIEW_TYPE_ID,
		DEFECT_ID,
		ORDER_NUMBER,
		CREATED_BY,
		CREATED_TS
	)
	select 
		r.REVIEW_TYPE_ID,
		d.new_DEFECT_ID,
		ORDER_NUMBER,
		@login_credential,
		getdate()
	from REVIEW_TYPE_DEFECT r, #t_defect d
	where r.DEFECT_ID = d.old_defect_id	

	insert into defect_remedy_type(
		defect_id,
		remedy_type_id,
		created_by,
		created_ts
	)
	select
		d.new_defect_id,
		dr.remedy_type_id,
		@login_credential,
		getdate()
	from defect_remedy_type dr, #t_defect d
	where dr.DEFECT_ID = d.old_defect_id							

	create table #t_defect_cause(
		new_defect_cause_id uniqueidentifier null default newid(),
		old_defect_cause_id uniqueidentifier null,
		defect_cause_cd varchar(16) null,
		new_defect_id uniqueidentifier null,
		defect_cd varchar(16) null,
		description varchar(150) null,
		relative_order int
	)
										   
	insert into #t_defect_cause(
		old_defect_cause_id,
		defect_cause_cd,
		new_defect_id,
		defect_cd,
		description,
		relative_order
	)
	select 
		dc.defect_cause_id,
		dc.defect_cause_cd,
		d.new_defect_id,
		d.defect_cd,
		dc.description, 
		dc.relative_order
	from defect_cause dc, #t_defect d
	where dc.defect_id = d.old_defect_id

	insert into defect_cause(
		defect_cause_id,
		defect_cause_cd,
		description,
		defect_id,
		defect_cd,
		relative_order,
		created_by,
		created_ts
	)
	select  
		new_defect_cause_id,
		defect_cause_cd,
		description,
		new_defect_id,
		defect_cd,
		relative_order,
		@login_credential,
		getdate()
	from #t_defect_cause 

	create table #t_defect_source(
		new_defect_source_id uniqueidentifier null default newid(),
		old_defect_source_id uniqueidentifier null,
		defect_source_cd varchar(16) null,
		new_defect_id uniqueidentifier null,
		defect_cd varchar(16) null,
		description varchar(150) null,
		relative_order int
	)
										   
	insert into #t_defect_source(
		old_defect_source_id,
		defect_source_cd,
		new_defect_id,
		defect_cd,
		description,
		relative_order
	)
	select 
		ds.defect_source_id,
		ds.defect_source_cd,
		d.new_defect_id,
		d.defect_cd,
		ds.description,
		ds.relative_order      
	from defect_source ds, #t_defect d
	where ds.defect_id = d.old_defect_id

	insert into defect_source(
		defect_source_id,
		defect_source_cd,
		description,
		defect_id,
		defect_cd,
		created_by,
		created_ts,
		relative_order
	)
	select 
		new_defect_source_id,
		defect_source_cd,
		description,
		new_defect_id, 
		defect_cd,
		@login_credential,
		getdate(),
		relative_order
	from #t_defect_source 

	create table #t_defect_severity(
		new_defect_severity_id uniqueidentifier null default newid(),
		old_defect_severity_id uniqueidentifier null,
		severity_tier_cd varchar(16) null,
		description varchar(1024) null,
		new_defect_id uniqueidentifier null,
		defect_cd varchar(16) null,
		relative_order int null,
		example_text varchar(1024) null
	)
										   
	insert into #t_defect_severity(
		old_defect_severity_id,
		severity_tier_cd,
		description,
		new_defect_id,
		defect_cd,
		relative_order,
		example_text
	)
	select 
		ds.defect_severity_id,
		ds.severity_tier_cd,
		ds.description,
		d.new_defect_id,
		d.defect_cd,
		ds.relative_order,
		ds.example_text
	from defect_severity ds, #t_defect d
	where ds.defect_id = d.old_defect_id

	insert into defect_severity(
		defect_severity_id,
		severity_tier_cd,
		description,
		defect_id,
		defect_cd,
		created_by,
		created_ts,
		relative_order,
		example_text
	)
	select 
		new_defect_severity_id,
		severity_tier_cd,
		description,
		new_defect_id, 
		defect_cd,
		@login_credential,
		getdate(),
		relative_order,
		example_text
	from #t_defect_severity 

	insert into finding_rating_rule(
		defect_id,
		defect_cause_id,
		defect_source_id,
		unacceptable_rating_threshold
	)
	select
		c.new_defect_id,
		c.new_defect_cause_id,
		s.new_defect_source_id,
		fr.unacceptable_rating_threshold
	from
		#t_defect_cause c,
		#t_defect_source s,
		finding_rating_rule fr
	where fr.defect_cause_id = c.old_defect_cause_id and fr.defect_source_id = s.old_defect_source_id 

	create table #t_qatree(
		new_qatree_id uniqueidentifier null default newid(),
		old_qatree_id uniqueidentifier null,
		new_qa_model_id uniqueidentifier not null,
		new_defect_id uniqueidentifier null,
		enable_pre_qual_question_ind char(1) null
	)
						   
	insert into #t_qatree(
		old_qatree_id,
		new_qa_model_id,
		new_defect_id,
		enable_pre_qual_question_ind)
	select
		q.qatree_id,
		@to_qa_model_id,
		t.new_defect_id,
		enable_pre_qual_question_ind
	from #t_defect t,qatree q
	where t.old_defect_id = q.defect_id

	insert into qatree(
		qatree_id,
		created_by,
		created_ts,
		qa_model_id,
		defect_id,
		enable_pre_qual_question_ind)  
	select 
		new_qatree_id,
		@login_credential,
		getdate(),
		new_qa_model_id,
		new_defect_id,
		enable_pre_qual_question_ind
	from #t_qatree 

	create table #t_outcome(
		new_qatree_outcome_id uniqueidentifier null default newid(),
		old_qatree_outcome_id uniqueidentifier null,
		new_defect_id uniqueidentifier null
	)

	insert into #t_outcome(
		old_qatree_outcome_id,
		new_defect_id
	)
	select
		o.qatree_outcome_id,
		t.new_defect_id
	from #t_defect t,qatree_outcome o
	where t.old_defect_id = o.defect_id

	insert into qatree_outcome(
		qatree_outcome_id,
		defect_id,
		created_by,
		created_ts,
		source_filter_question_id
	)
	select
		new_qatree_outcome_id,
		new_defect_id,
		@login_credential,
		getdate(),
		q.source_filter_question_id
	from #t_outcome t,qatree_outcome q
	where t.old_qatree_outcome_id = q.qatree_outcome_id

	insert into qatree_outcome_defect_cause(
		defect_cause_id,
		qatree_outcome_id,
		created_by,
		created_ts
	)
	select
		tc.new_defect_cause_id,
		t.new_qatree_outcome_id,
		@login_credential,
		getdate()
	from
		#t_outcome t,
		#t_defect_cause tc,
		qatree_outcome_defect_cause c
	where
		t.old_qatree_outcome_id = c.qatree_outcome_id
		and c.defect_cause_id = tc.old_defect_cause_id

	insert into qatree_outcome_defect_source(
		defect_source_id,
		qatree_outcome_id,
		created_by,
		created_ts
	)
	select
		tc.new_defect_source_id,
		t.new_qatree_outcome_id,
		@login_credential,
		getdate()
	from
		#t_outcome t,
		#t_defect_source tc,
		qatree_outcome_defect_source c
	where
		t.old_qatree_outcome_id = c.qatree_outcome_id 
		and c.defect_source_id = tc.old_defect_source_id

	insert into qatree_outcome_defect_severity(
		defect_severity_id,
		qatree_outcome_id,
		created_by,
		created_ts
	)
	select
		tc.new_defect_severity_id,
		t.new_qatree_outcome_id,
		@login_credential,
		getdate()
	from
		#t_outcome t,
		#t_defect_severity tc,
		qatree_outcome_defect_severity c
	where
		t.old_qatree_outcome_id = c.qatree_outcome_id 
		and c.defect_severity_id = tc.old_defect_severity_id

	create table #t_question(
		new_question_id uniqueidentifier null default newid(),
		old_question_id uniqueidentifier null,
		new_qatree_id uniqueidentifier null
	)

	insert into #t_question(
		old_question_id,
		new_qatree_id
	)
	select
		qu.question_id,
		qa.new_qatree_id 
	from
		qatree_question qu,
		#t_qatree qa
	where qu.qatree_id = qa.old_qatree_id

	insert into QUESTION_REFERENCE(
		QUESTION_ID,
		QUESTION_DESCRIPTION,
		VALUE_TO_TRIGGER_ACTION,
		RESPONSE_TYPE,
		ANSWER_VALUES,
		created_by,
		created_ts
	)
	select   
		a.new_QUESTION_ID,
		QUESTION_DESCRIPTION,
		VALUE_TO_TRIGGER_ACTION,
		RESPONSE_TYPE,
		ANSWER_VALUES,
		@login_credential,
		getdate()
	from
		#t_question a,
		QUESTION_REFERENCE b
	where a.old_question_id = b.QUESTION_ID

	insert into qatree_question(
		question_id,
		qatree_id,
		question_number,
		question_reference,
		qatree_outcome_id,
		--parent_question_id,
		created_by,
		created_ts,
		order_number
	)
	select
		t.new_question_id,
		t.new_qatree_id,
		q.question_number,
		q.question_reference,
		o.new_qatree_outcome_id,
		--q.parent_question_id,
		@login_credential,
		getdate(),
		q.order_number
	from #t_question t
	inner join qatree_question q
		on t.old_question_id = q.question_id 
	left outer join #t_outcome o
		on q.qatree_outcome_id = o.old_qatree_outcome_id

	insert into QA_MODEL_PREQUAL(
		QUESTION_ID,
		PRE_QUAL_POTENTIAL_ANSWER_CD,
		QUESTION_REF_ID_CSV,
		description
	)
	select 
		a.new_QUESTION_ID,
		PRE_QUAL_POTENTIAL_ANSWER_CD,
		QUESTION_REF_ID_CSV,
		b.description
	from
		#t_question a,
		QA_MODEL_PREQUAL b
	where a.old_question_id = b.QUESTION_ID
									
	update QATREE_QUESTION
	set PARENT_QUESTION_ID = b.new_question_id
	from
		QATREE_QUESTION a,
		#t_question b
	where a.PARENT_QUESTION_ID = b.old_question_id

	update QATREE_OUTCOME
	set SOURCE_FILTER_QUESTION_ID = b.new_question_id
	from
		QATREE_OUTCOME a,
		#t_question b
	where a.SOURCE_FILTER_QUESTION_ID = b.old_question_id

	insert into QATREE_QSTN_CONDITION(
		entity_name,
		field_name,
		question_id,
		qatree_id,
		comparison_values,
		condition_operator,
		created_by,
		created_ts
	)
	select
		entity_name,
		field_name,
		new_question_id,
		new_qatree_id,
		comparison_values,
		condition_operator,
		@login_credential,
		getdate()
	from
		#t_question tq,
		QATREE_QSTN_CONDITION qqc
	where tq.old_question_id = qqc.QUESTION_ID
			]]>
        </sql>
    </changeSet>	
</databaseChangeLog>    
