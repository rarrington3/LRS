<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2134_0001" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'SELECTION_PARAMETERS', 'SELECTION_REASON'
EXEC SP_RENAME 'SELECTION_REASON.SLCTN_REASON_ID', 'SELECTION_REASON_ID'
EXEC SP_RENAME 'SELECTION_REASON.SELECTION_REASON_NAME', 'DESCRIPTION'

ALTER TABLE SELECTION_REASON ADD CODE VARCHAR(30) NULL
GO
UPDATE SELECTION_REASON SET CODE = 'TEST_CASE' WHERE DESCRIPTION = 'Test Case'
UPDATE SELECTION_REASON SET CODE = 'FHA_MANUAL' WHERE DESCRIPTION = 'FHA Manual'
UPDATE SELECTION_REASON SET CODE = 'LENDER_SELF_REPORT' WHERE DESCRIPTION = 'Lender Self-Report'
UPDATE SELECTION_REASON SET CODE = 'OIG_AUDIT' WHERE DESCRIPTION = 'OIG Audit'
UPDATE SELECTION_REASON SET CODE = 'OTHER_NON_PERFORMING' WHERE DESCRIPTION = 'Other Non-Performing (to fill capacity)'
UPDATE SELECTION_REASON SET CODE = 'MONTHLY_RISK_THRESHOLD' WHERE DESCRIPTION = 'Monthly Risk Threshold'
UPDATE SELECTION_REASON SET CODE = 'LENDER_INCREASED_SAMPLING' WHERE DESCRIPTION = 'Lender Increased Sampling'
UPDATE SELECTION_REASON SET CODE = 'UNDERWRITER_DECREASED_SAMPLING' WHERE DESCRIPTION = 'Underwriter Increased Sampling'
UPDATE SELECTION_REASON SET CODE = 'MONTHLY_RANDOM' WHERE DESCRIPTION = 'Monthly Random'
UPDATE SELECTION_REASON SET CODE = 'EARLY_CLAIM' WHERE DESCRIPTION = 'Early Claims'
UPDATE SELECTION_REASON SET CODE = 'EARLY_PAYMENT_DEFAULT' WHERE DESCRIPTION = 'Early Payment Defaults'
UPDATE SELECTION_REASON SET CODE = 'NATIONAL_QC' WHERE DESCRIPTION = 'National QC'
UPDATE SELECTION_REASON SET CODE = 'REVIEW_LOCATION_QC' WHERE DESCRIPTION = 'Review Location QC'
UPDATE SELECTION_REASON SET CODE = 'LENDER_MONITORING' WHERE DESCRIPTION = 'Lender Monitoring'
GO
ALTER TABLE SELECTION_REASON ALTER COLUMN CODE VARCHAR(30) NOT NULL
ALTER TABLE SELECTION_REASON ADD CONSTRAINT SELECTION_REASON_UQ_CODE UNIQUE(CODE)
ALTER TABLE SELECTION_REASON DROP COLUMN SELECTION_REASON_SHORT_NAME

EXEC SP_RENAME 'DF_SELECTION_PARAMETERS_SLCTN_REASON_ID', 'SELECTION_REASON_DF_SELECTION_REASON_ID'

EXEC SP_RENAME 'LOAN_SELECTION.SLCTN_REASON_ID', 'SELECTION_REASON_ID'
ALTER TABLE LOAN_SELECTION DROP CONSTRAINT LOANSELECTIONTOSELECTPARM
ALTER TABLE LOAN_SELECTION ADD CONSTRAINT LOAN_SELECTION_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)

EXEC SP_RENAME 'LOAN_SELECTION_PENDING.SLCTN_REASON_ID', 'SELECTION_REASON_ID'
ALTER TABLE LOAN_SELECTION_PENDING DROP CONSTRAINT PENDSELECTIONTOREASON
ALTER TABLE LOAN_SELECTION_PENDING ADD CONSTRAINT LOAN_SELECTION_PENDING_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)

EXEC SP_RENAME 'RVW_LEVEL_ITERATION_TIMEFRAME.SLCTN_REASON_ID', 'SELECTION_REASON_ID'
ALTER TABLE RVW_LEVEL_ITERATION_TIMEFRAME DROP CONSTRAINT RVWTIMEFRAMETOSELECTPARM
ALTER TABLE RVW_LEVEL_ITERATION_TIMEFRAME ADD CONSTRAINT RVW_LEVEL_ITERATION_TIMEFRAME_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)

EXEC SP_RENAME 'RVW_LOCATION_REASON.SLCTN_REASON_ID', 'SELECTION_REASON_ID'
ALTER TABLE RVW_LOCATION_REASON DROP CONSTRAINT RVWLOCREASONTOSELECTPARM
ALTER TABLE RVW_LOCATION_REASON ADD CONSTRAINT RVW_LOCATION_REASON_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)

EXEC SP_RENAME 'QATREE_QSTN_RULES.SLCTN_REASON_ID', 'SELECTION_REASON_ID'
ALTER TABLE QATREE_QSTN_RULES DROP CONSTRAINT QUESTIONRULESTOSELREASON
ALTER TABLE QATREE_QSTN_RULES ADD CONSTRAINT QATREE_QSTN_RULES_FK_SELECTION_REASON_ID FOREIGN KEY(SELECTION_REASON_ID) REFERENCES SELECTION_REASON(SELECTION_REASON_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE SELECTION_SUB_REASON_REF(
	SELECTION_SUB_REASON_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(4) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE SELECTION_SUB_REASON_REF ADD CONSTRAINT SELECTION_SUB_REASON_REF_PK PRIMARY KEY NONCLUSTERED(SELECTION_SUB_REASON_ID)
ALTER TABLE SELECTION_SUB_REASON_REF ADD CONSTRAINT SELECTION_SUB_REASON_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO SELECTION_SUB_REASON_REF(SELECTION_SUB_REASON_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'IAPR', 'Internal – Appraisal'),
	(NEWID(), 'IEND', 'Internal – Endorsement'),
	(NEWID(), 'IOTH', 'Internal – Other'),
	(NEWID(), 'EBWR', 'External – Borrower'),
	(NEWID(), 'EIND', 'External – Industry'),
	(NEWID(), 'EOTH', 'External – Other')
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE LOAN_SELECTION_PENDING DROP COLUMN SELECTION_SUB_REASON
ALTER TABLE LOAN_SELECTION_PENDING ADD SELECTION_SUB_REASON_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION_PENDING ADD CONSTRAINT LOAN_SELECTION_PENDING_FK_SELECTION_SUB_REASON_ID FOREIGN KEY(SELECTION_SUB_REASON_ID) REFERENCES SELECTION_SUB_REASON_REF(SELECTION_SUB_REASON_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE FILE_DELIVERY_LOCATION_REF(
	FILE_DELIVERY_LOCATION_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(4) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE FILE_DELIVERY_LOCATION_REF ADD CONSTRAINT FILE_DELIVERY_LOCATION_REF_PK PRIMARY KEY NONCLUSTERED(FILE_DELIVERY_LOCATION_ID)
ALTER TABLE FILE_DELIVERY_LOCATION_REF ADD CONSTRAINT FILE_DELIVERY_LOCATION_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO FILE_DELIVERY_LOCATION_REF(FILE_DELIVERY_LOCATION_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'FHA', 'FHA'),
	(NEWID(), 'LEND', 'Lender')
GO

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'REVIEW_LOCATION.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'

EXEC SP_RENAME 'LOAN_SELECTION.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'
EXEC SP_RENAME 'LOAN_SELECTION_FK_RVW_LOCATION_ID', 'LOAN_SELECTION_FK_REVIEW_LOCATION_ID'
EXEC SP_RENAME 'LOAN_SELECTION.PREF_RVW_LOCATION_ID', 'PREFERRED_REVIEW_LOCATION_ID'
EXEC SP_RENAME 'LOAN_SELECT_FK_REVIEW_LOCATION', 'LOAN_SELECTION_FK_PREFERRED_REVIEW_LOCATION_ID'

EXEC SP_RENAME 'LOAN_SELECTION_PENDING.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'
ALTER TABLE LOAN_SELECTION_PENDING ADD CONSTRAINT LOAN_SELECTION_PENDING_FK_REVIEW_LOCATION_ID FOREIGN KEY(REVIEW_LOCATION_ID) REFERENCES REVIEW_LOCATION(REVIEW_LOCATION_ID)

EXEC SP_RENAME 'LOCATION_ASSIGNMENT_TYPE.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'
EXEC SP_RENAME 'LOCASSIGNMENTTYPTORVWLOC', 'LOCATION_ASSIGNMENT_TYPE_FK_REVIEW_LOCATION_ID'

EXEC SP_RENAME 'PERSONNEL.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'
EXEC SP_RENAME 'PERSONNEL_FK_REVIEW_LOCATION', 'PERSONNEL_FK_REVIEW_LOCATION_ID'

EXEC SP_RENAME 'REVIEW_LEVEL.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'
EXEC SP_RENAME 'REVIEW_LEVEL_FK_RVW_LOCATION_ID', 'REVIEW_LEVEL_FK_REVIEW_LOCATION_ID'

EXEC SP_RENAME 'RVW_LOCATION_REASON.RVW_LOCATION_ID', 'REVIEW_LOCATION_ID'
ALTER TABLE RVW_LOCATION_REASON ADD CONSTRAINT RVW_LOCATION_REASON_FK_REVIEW_LOCATION_ID FOREIGN KEY(REVIEW_LOCATION_ID) REFERENCES REVIEW_LOCATION(REVIEW_LOCATION_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE SELECTION_REQUEST_TYPE_REF(
	SELECTION_REQUEST_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE SELECTION_REQUEST_TYPE_REF ADD CONSTRAINT SELECTION_REQUEST_TYPE_REF_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_TYPE_ID)
ALTER TABLE SELECTION_REQUEST_TYPE_REF ADD CONSTRAINT SELECTION_REQUEST_TYPE_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO SELECTION_REQUEST_TYPE_REF(SELECTION_REQUEST_TYPE_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'TEST_CASE', 'Test Case'),
	(NEWID(), 'UNIVERSE', 'Universe'),
	(NEWID(), 'LENDER_MONITORING', 'Lender Monitoring'),
	(NEWID(), 'LENDER_SELF_REPORT', 'Lender Self-Report'),
	(NEWID(), 'FHA_MANUAL', 'FHA Manual')
GO

----------------------------------------------------------------------------------------------------

CREATE TABLE SELECTION_REQUEST(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	SELECTION_REQUEST_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE SELECTION_REQUEST ADD CONSTRAINT SELECTION_REQUEST_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID)
ALTER TABLE SELECTION_REQUEST ADD CONSTRAINT SELECTION_REQUEST_FK_SELECTION_REQUEST_TYPE_ID FOREIGN KEY(SELECTION_REQUEST_TYPE_ID) REFERENCES SELECTION_REQUEST_TYPE_REF(SELECTION_REQUEST_TYPE_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE LENDER_MONITORING_SELECTION_REQUEST(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	LENDER_ID VARCHAR(5) NOT NULL,
	REVIEW_LOCATION_ID UNIQUEIDENTIFIER NULL,
	REVIEW_TYPE_ID UNIQUEIDENTIFIER NULL,
	FILE_DELIVERY_LOCATION_ID UNIQUEIDENTIFIER NULL,
	SITE_VISIT_DT DATETIME NULL,
	PRODUCT_TYPE_ID UNIQUEIDENTIFIER NULL,
	CASE_COUNT INT NULL,
	START_DT DATETIME NULL,
	END_DT DATETIME NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ADD CONSTRAINT LENDER_MONITORING_SELECTION_REQUEST_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ADD CONSTRAINT LENDER_MONITORING_SELECTION_REQUEST_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ADD CONSTRAINT LENDER_MONITORING_SELECTION_REQUEST_FK_REVIEW_LOCATION_ID FOREIGN KEY(REVIEW_LOCATION_ID) REFERENCES REVIEW_LOCATION(REVIEW_LOCATION_ID)
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ADD CONSTRAINT LENDER_MONITORING_SELECTION_REQUEST_FK_REVIEW_TYPE_ID FOREIGN KEY(REVIEW_TYPE_ID) REFERENCES REVIEW_TYPE_REF(REVIEW_TYPE_ID)
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ADD CONSTRAINT LENDER_MONITORING_SELECTION_REQUEST_FK_FILE_DELIVERY_LOCATION_ID FOREIGN KEY(FILE_DELIVERY_LOCATION_ID) REFERENCES FILE_DELIVERY_LOCATION_REF(FILE_DELIVERY_LOCATION_ID)
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ADD CONSTRAINT LENDER_MONITORING_SELECTION_REQUEST_FK_PRODUCT_TYPE_ID FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PRODUCT_TYPE_REF(PRODUCT_TYPE_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE LENDER_SELF_REPORT_SELECTION_REQUEST(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	FRAUD_DETECTED BIT NOT NULL,
	FINDINGS_DESCRIPTION VARCHAR(MAX) NULL,
	CORRECTIVE_ACTIONS_DESCRIPTION VARCHAR(MAX) NULL,
	LOAN_COVERED_UNDER_SETTLEMTN_WITH_HUD BIT NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES SELECTION_REQUEST(SELECTION_REQUEST_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	DEFECT_ID UNIQUEIDENTIFIER NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID, DEFECT_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES LENDER_SELF_REPORT_SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_FK_DEFECT_ID FOREIGN KEY(DEFECT_ID) REFERENCES DEFECT(DEFECT_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	DEFECT_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID, DEFECT_TYPE_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES LENDER_SELF_REPORT_SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF_FK_DEFECT_TYPE_ID FOREIGN KEY(DEFECT_TYPE_ID) REFERENCES DEFECT_TYPE_REF(DEFECT_TYPE_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	FRAUD_TYPE_ID UNIQUEIDENTIFIER NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID, FRAUD_TYPE_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES LENDER_SELF_REPORT_SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF_FK_FRAUD_TYPE_ID FOREIGN KEY(FRAUD_TYPE_ID) REFERENCES FRAUD_TYPE_REF(FRAUD_TYPE_ID)

----------------------------------------------------------------------------------------------------

CREATE TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	FRAUD_PARTICIPANT_ID UNIQUEIDENTIFIER NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID, FRAUD_PARTICIPANT_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES LENDER_SELF_REPORT_SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF ADD CONSTRAINT LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF_FK_FRAUD_PARTICIPANT_ID FOREIGN KEY(FRAUD_PARTICIPANT_ID) REFERENCES FRAUD_PARTICIPANT_REF(FRAUD_PARTICIPANT_ID)

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'UNIVERSE_REF.UNIVERSE_REF_ID', 'UNIVERSE_ID'

CREATE TABLE UNIVERSE_SELECTION_REQUEST(
	SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL,
	UNIVERSE_ID UNIQUEIDENTIFIER NOT NULL,
	START_DT DATETIME NOT NULL,
	END_DT DATETIME NOT NULL,
	JBPM_PROCESS_ID BIGINT NOT NULL,
	AUTOMATIC_IND CHAR NOT NULL,
	CREATED_BY CHAR(6) NOT NULL,
	CREATED_TS DATETIME NOT NULL,
	UPDATED_BY CHAR(6) NOT NULL,
	UPDATED_TS DATETIME NOT NULL,
	COMPLETED_TS DATETIME NULL,
)
ALTER TABLE UNIVERSE_SELECTION_REQUEST ADD CONSTRAINT UNIVERSE_SELECTION_REQUEST_PK PRIMARY KEY NONCLUSTERED(SELECTION_REQUEST_ID)
ALTER TABLE UNIVERSE_SELECTION_REQUEST ADD CONSTRAINT UNIVERSE_SELECTION_REQUEST_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES SELECTION_REQUEST(SELECTION_REQUEST_ID)
ALTER TABLE UNIVERSE_SELECTION_REQUEST ADD CONSTRAINT UNIVERSE_SELECTION_REQUEST_UNIVERSE_ID FOREIGN KEY(UNIVERSE_ID) REFERENCES UNIVERSE_REF(UNIVERSE_ID)

----------------------------------------------------------------------------------------------------

DROP TABLE SELECT_REQUEST_FRAUD_TYPE
DROP TABLE SELECT_REQUEST_FRAUD_PRTCPNT
DROP TABLE SELECT_REQUEST_DEFECT
DROP TABLE SELECT_REQUEST_DEFECT_TYPE
DROP TABLE SELECT_REQUEST_LENDER_MON
DROP TABLE SELECT_REQUEST_LENDER_SELF
DROP TABLE SELECT_REQUEST_MANUAL_FHA
DROP TABLE LENDER_MONITORING_RQST_MODEL

----------------------------------------------------------------------------------------------------

GO
INSERT INTO SELECTION_REQUEST(SELECTION_REQUEST_ID, SELECTION_REQUEST_TYPE_ID, CREATED_BY, CREATED_TS, UPDATED_BY, UPDATED_TS) VALUES
	(NEWID(), (SELECT SELECTION_REQUEST_TYPE_ID FROM SELECTION_REQUEST_TYPE_REF WHERE CODE = 'TEST_CASE'), 'jchav', CURRENT_TIMESTAMP, 'jchav', CURRENT_TIMESTAMP)
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE LOAN_SELECTION_CASE_SUMMARY DROP CONSTRAINT LOAN_SELECTION_CASE_SUMMARY_FK_JOB_ID
ALTER TABLE LOAN_SELECTION_CASE_SUMMARY DROP CONSTRAINT LOAN_SELECTION_CASE_SUMMARY_UQ_CASE_NUMBER_JOB_ID
ALTER TABLE LOAN_SELECTION_CASE_SUMMARY DROP COLUMN JOB_ID
ALTER TABLE LOAN_SELECTION_CASE_SUMMARY ADD SELECTION_REQUEST_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION_CASE_SUMMARY ADD CONSTRAINT LOAN_SELECTION_CASE_SUMMARY_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES SELECTION_REQUEST(SELECTION_REQUEST_ID)
GO
UPDATE LOAN_SELECTION_CASE_SUMMARY SET SELECTION_REQUEST_ID = (SELECT TOP 1 SELECTION_REQUEST_ID  FROM SELECTION_REQUEST)
GO
ALTER TABLE LOAN_SELECTION_CASE_SUMMARY ALTER COLUMN SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL

DROP TABLE JOB
DROP TABLE JOB_TYPE_REF

----------------------------------------------------------------------------------------------------

UPDATE LS SET LS.SELECTION_REASON_ID = (SELECT SELECTION_REASON_ID FROM SELECTION_REASON WHERE CODE = 'TEST_CASE')
FROM LOAN_SELECTION LS
INNER JOIN LOAN_SELECTION_CASE_SUMMARY LSCS ON LSCS.SELECTION_ID = LS.SELECTION_ID
INNER JOIN SELECTION_REQUEST SR ON SR.SELECTION_REQUEST_ID = LSCS.SELECTION_REQUEST_ID
INNER JOIN SELECTION_REQUEST_TYPE_REF SRT ON SRT.SELECTION_REQUEST_TYPE_ID = SR.SELECTION_REQUEST_TYPE_ID
WHERE SRT.CODE = 'TEST_CASE'
GO

----------------------------------------------------------------------------------------------------

CREATE TABLE BATCH_STATUS_REF(
	BATCH_STATUS_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE BATCH_STATUS_REF ADD CONSTRAINT BATCH_STATUS_REF_PK PRIMARY KEY NONCLUSTERED(BATCH_STATUS_ID)
ALTER TABLE BATCH_STATUS_REF ADD CONSTRAINT BATCH_STATUS_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO BATCH_STATUS_REF(BATCH_STATUS_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'AWAITING_ASSIGNMENT', 'Awaiting Assignment'),
	(NEWID(), 'UNDER_REVIEW', 'Under Review'),
	(NEWID(), 'UNDER_BATCH_REVIEW', 'Under Batch Review'),
	(NEWID(), 'PENDING_LENDER_RESPONSE', 'Pending Lender Response'),
	(NEWID(), 'COMPLETED', 'Completed')
GO

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'RVW_BATCH', 'BATCH'
EXEC SP_RENAME 'BATCH.REQUEST_OPS_DOCS_IND', 'REQUEST_OPERATIONAL_DOCUMENTS_IND'
EXEC SP_RENAME 'BATCH.OPERATIONAL_RVW_GUIDANCE_TXT', 'OPERATIONAL_REVIEW_GUIDANCE'

ALTER TABLE BATCH ADD SELECTION_REQUEST_ID UNIQUEIDENTIFIER NULL
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_SELECTION_REQUEST_ID FOREIGN KEY(SELECTION_REQUEST_ID) REFERENCES SELECTION_REQUEST(SELECTION_REQUEST_ID)
GO
UPDATE BATCH SET SELECTION_REQUEST_ID = (SELECT TOP 1 SELECTION_REQUEST_ID  FROM SELECTION_REQUEST)
GO
ALTER TABLE BATCH ALTER COLUMN SELECTION_REQUEST_ID UNIQUEIDENTIFIER NOT NULL;

GO
UPDATE BATCH SET CREATED_BY = 'SYSTEM' WHERE CREATED_BY IS NULL
GO
ALTER TABLE BATCH ALTER COLUMN CREATED_BY CHAR(6) NOT NULL

GO
UPDATE BATCH SET UPDATED_BY = 'SYSTEM' WHERE UPDATED_BY IS NULL
GO
ALTER TABLE BATCH ALTER COLUMN UPDATED_BY CHAR(6) NOT NULL

GO
UPDATE BATCH SET CREATED_TS = CURRENT_TIMESTAMP WHERE CREATED_TS IS NULL
GO
ALTER TABLE BATCH ALTER COLUMN CREATED_TS DATETIME NOT NULL

GO
UPDATE BATCH SET UPDATED_TS = CURRENT_TIMESTAMP WHERE UPDATED_TS IS NULL
GO
ALTER TABLE BATCH ALTER COLUMN UPDATED_TS DATETIME NOT NULL

ALTER TABLE BATCH DROP COLUMN STATUS
ALTER TABLE BATCH ADD BATCH_STATUS_ID UNIQUEIDENTIFIER NULL
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_BATCH_STATUS_ID FOREIGN KEY(BATCH_STATUS_ID) REFERENCES BATCH_STATUS_REF(BATCH_STATUS_ID)
GO
UPDATE BATCH SET BATCH_STATUS_ID = (SELECT BATCH_STATUS_ID FROM BATCH_STATUS_REF WHERE CODE = 'AWAITING_ASSIGNMENT')
GO
ALTER TABLE BATCH ALTER COLUMN BATCH_STATUS_ID UNIQUEIDENTIFIER NOT NULL

----------------------------------------------------------------------------------------------------

CREATE TABLE PERSONNEL_STATUS_REF(
	PERSONNEL_STATUS_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(1) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE PERSONNEL_STATUS_REF ADD CONSTRAINT PERSONNEL_STATUS_REF_PK PRIMARY KEY NONCLUSTERED(PERSONNEL_STATUS_ID)
ALTER TABLE PERSONNEL_STATUS_REF ADD CONSTRAINT PERSONNEL_STATUS_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO PERSONNEL_STATUS_REF(PERSONNEL_STATUS_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'A', 'Active'),
	(NEWID(), 'I', 'Inactive'),
	(NEWID(), 'T', 'Terminated')
GO
ALTER TABLE PERSONNEL ADD PERSONNEL_STATUS_ID UNIQUEIDENTIFIER NULL
ALTER TABLE PERSONNEL ADD CONSTRAINT PERSONNEL_FK_PERSONNEL_STATUS_ID FOREIGN KEY(PERSONNEL_STATUS_ID) REFERENCES PERSONNEL_STATUS_REF(PERSONNEL_STATUS_ID)
GO
UPDATE P SET P.PERSONNEL_STATUS_ID = PS.PERSONNEL_STATUS_ID
FROM PERSONNEL P
INNER JOIN PERSONNEL_STATUS_REF PS ON PS.CODE = P.STATUS_CODE
GO
ALTER TABLE PERSONNEL ALTER COLUMN PERSONNEL_STATUS_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE PERSONNEL DROP COLUMN STATUS_CODE

----------------------------------------------------------------------------------------------------

CREATE TABLE LOAN_SELECTION_STATUS_REF(
	LOAN_SELECTION_STATUS_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE LOAN_SELECTION_STATUS_REF ADD CONSTRAINT LOAN_SELECTION_STATUS_REF_PK PRIMARY KEY NONCLUSTERED(LOAN_SELECTION_STATUS_ID)
ALTER TABLE LOAN_SELECTION_STATUS_REF ADD CONSTRAINT LOAN_SELECTION_STATUS_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO LOAN_SELECTION_STATUS_REF(LOAN_SELECTION_STATUS_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'SELECTED', 'Selected'),
	(NEWID(), 'DISTRIBUTED', 'Distributed'),
	(NEWID(), 'REQUESTED', 'Requested'),
	(NEWID(), 'RECEIVED', 'Received'),
	(NEWID(), 'COMPLETED', 'Completed'),
	(NEWID(), 'EXCEPTION', 'Exception')
GO
ALTER TABLE LOAN_SELECTION ADD LOAN_SELECTION_STATUS_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION ADD CONSTRAINT LOAN_SELECTION_FK_LOAN_SELECTION_STATUS_ID FOREIGN KEY(LOAN_SELECTION_STATUS_ID) REFERENCES LOAN_SELECTION_STATUS_REF(LOAN_SELECTION_STATUS_ID)
GO
UPDATE LS SET LS.LOAN_SELECTION_STATUS_ID = LSS.LOAN_SELECTION_STATUS_ID
FROM LOAN_SELECTION LS
INNER JOIN LOAN_SELECTION_STATUS_REF LSS ON LSS.CODE = LS.STATUS
GO
UPDATE LOAN_SELECTION SET LOAN_SELECTION_STATUS_ID = (SELECT LOAN_SELECTION_STATUS_ID FROM LOAN_SELECTION_STATUS_REF WHERE CODE = 'SELECTED') WHERE LOAN_SELECTION_STATUS_ID IS NULL
GO
ALTER TABLE LOAN_SELECTION ALTER COLUMN LOAN_SELECTION_STATUS_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE LOAN_SELECTION DROP COLUMN STATUS

----------------------------------------------------------------------------------------------------

CREATE TABLE REVIEW_STATUS_REF(
	REVIEW_STATUS_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE REVIEW_STATUS_REF ADD CONSTRAINT REVIEW_STATUS_REF_PK PRIMARY KEY NONCLUSTERED(REVIEW_STATUS_ID)
ALTER TABLE REVIEW_STATUS_REF ADD CONSTRAINT REVIEW_STATUS_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO REVIEW_STATUS_REF(REVIEW_STATUS_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'AWAITING_ASSIGNMENT', 'Awaiting Assignment'),
	(NEWID(), 'ASSIGNED', 'Assigned'),
	(NEWID(), 'UNDER_REVIEW', 'Under Review'),
	(NEWID(), 'PENDING_LENDER_RESPONSE', 'Pending Lender Response'),
	(NEWID(), 'COMPLETED', 'Completed'),
	(NEWID(), 'EXCEPTION', 'Exception'),
	(NEWID(), 'CANCELLED', 'Cancelled')
GO
ALTER TABLE REVIEW ADD REVIEW_STATUS_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_FK_REVIEW_STATUS_ID FOREIGN KEY(REVIEW_STATUS_ID) REFERENCES REVIEW_STATUS_REF(REVIEW_STATUS_ID)
GO
UPDATE R SET R.REVIEW_STATUS_ID = RS.REVIEW_STATUS_ID
FROM REVIEW R
INNER JOIN REVIEW_STATUS_REF RS ON RS.CODE = R.STATUS
GO
ALTER TABLE REVIEW ALTER COLUMN REVIEW_STATUS_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE REVIEW DROP COLUMN STATUS

----------------------------------------------------------------------------------------------------

CREATE TABLE REVIEW_LEVEL_STATUS_REF(
	REVIEW_LEVEL_STATUS_ID UNIQUEIDENTIFIER NOT NULL,
	CODE VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(50) NOT NULL
)
ALTER TABLE REVIEW_LEVEL_STATUS_REF ADD CONSTRAINT REVIEW_LEVEL_STATUS_REF_PK PRIMARY KEY NONCLUSTERED(REVIEW_LEVEL_STATUS_ID)
ALTER TABLE REVIEW_LEVEL_STATUS_REF ADD CONSTRAINT REVIEW_LEVEL_STATUS_REF_UQ_CODE UNIQUE(CODE)
GO
INSERT INTO REVIEW_LEVEL_STATUS_REF(REVIEW_LEVEL_STATUS_ID, CODE, DESCRIPTION) VALUES
	(NEWID(), 'AWAITING_ASSIGNMENT', 'Awaiting Assignment'),
	(NEWID(), 'ASSIGNED', 'Assigned'),
	(NEWID(), 'IN_PROGRESS', 'In Progress'),
	(NEWID(), 'PENDING_BATCH_REVIEW', 'Pending Batch Review'),
	(NEWID(), 'PENDING_VETTING_REVIEW', 'Pending Vetting Review'),
	(NEWID(), 'POST_VETTING_REVIEW', 'Post Vetting Review'),
	(NEWID(), 'COMPLETED', 'Completed'),
	(NEWID(), 'EXCEPTION', 'Exception'),
	(NEWID(), 'CANCELLED', 'Cancelled')
GO
ALTER TABLE REVIEW_LEVEL ADD REVIEW_LEVEL_STATUS_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW_LEVEL ADD CONSTRAINT REVIEW_LEVEL_FK_REVIEW_LEVEL_STATUS_ID FOREIGN KEY(REVIEW_LEVEL_STATUS_ID) REFERENCES REVIEW_LEVEL_STATUS_REF(REVIEW_LEVEL_STATUS_ID)
GO
UPDATE RL SET RL.REVIEW_LEVEL_STATUS_ID = RLS.REVIEW_LEVEL_STATUS_ID
FROM REVIEW_LEVEL RL
INNER JOIN REVIEW_LEVEL_STATUS_REF RLS ON RLS.CODE = RL.STATUS
GO
ALTER TABLE REVIEW_LEVEL ALTER COLUMN REVIEW_LEVEL_STATUS_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE REVIEW_LEVEL DROP COLUMN STATUS

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'RATING', 'RATING_REF'
EXEC SP_RENAME 'RATING_REF.RATING_CD', 'CODE'
ALTER TABLE RATING_REF ADD RATING_ID UNIQUEIDENTIFIER NULL
GO
UPDATE RATING_REF SET RATING_ID = NEWID()
GO
ALTER TABLE RATING_REF ALTER COLUMN RATING_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE RATING_REF DROP CONSTRAINT RATING_PK
ALTER TABLE RATING_REF ADD CONSTRAINT RATING_PK PRIMARY KEY NONCLUSTERED(RATING_ID)

ALTER TABLE REVIEW ADD SUMMARY_RATING_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW ADD CONSTRAINT REVIEW_FK_SUMMARY_RATING_ID FOREIGN KEY(SUMMARY_RATING_ID) REFERENCES RATING_REF(RATING_ID)
GO
UPDATE R SET R.SUMMARY_RATING_ID = RR.RATING_ID
FROM REVIEW R
INNER JOIN RATING_REF RR ON RR.CODE = R.SUMMARY_RATING_CD
GO
ALTER TABLE REVIEW DROP COLUMN SUMMARY_RATING_CD

ALTER TABLE REVIEW_LEVEL ADD RATING_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW_LEVEL ADD CONSTRAINT REVIEW_LEVEL_FK_RATING_ID FOREIGN KEY(RATING_ID) REFERENCES RATING_REF(RATING_ID)
GO
UPDATE RL SET RL.RATING_ID = RR.RATING_ID
FROM REVIEW_LEVEL RL
INNER JOIN RATING_REF RR ON RR.CODE = RL.RATING_CD
GO
ALTER TABLE REVIEW_LEVEL DROP COLUMN RATING_CD

ALTER TABLE RVW_LVL_FINDING ADD RATING_ID UNIQUEIDENTIFIER NULL
ALTER TABLE RVW_LVL_FINDING ADD CONSTRAINT RVW_LVL_FINDING_FK_RATING_ID FOREIGN KEY(RATING_ID) REFERENCES RATING_REF(RATING_ID)
GO
UPDATE RLF SET RLF.RATING_ID = R.RATING_ID
FROM RVW_LVL_FINDING RLF
INNER JOIN RATING_REF R ON R.CODE = RLF.RATING_CD
GO
ALTER TABLE RVW_LVL_FINDING ALTER COLUMN RATING_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE RVW_LVL_FINDING DROP COLUMN RATING_CD


----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'PERSONNEL.PRSNNL_ID', 'PERSONNEL_ID'
EXEC SP_RENAME 'PERSONNEL.REPORTS_TO_PRSNNL_ID', 'REPORTS_TO_PERSONNEL_ID'
EXEC SP_RENAME 'PERSONNEL_FK_REPORTS_TO_PRSNNL_ID', 'PERSONNEL_FK_REPORTS_TO_PERSONNEL_ID'
EXEC SP_RENAME 'PERSONNEL.VETTING_PRSNNL_ID', 'VETTING_PERSONNEL_ID'
EXEC SP_RENAME 'PERSONNEL_FK_VETTING_PRSNNL_ID', 'PERSONNEL_FK_VETTING_PERSONNEL_ID'
GO

EXEC SP_RENAME 'BATCH.OWNER_PRSNNL_ID', 'OWNER_PERSONNEL_ID'
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_OWNER_PERSONNEL_ID FOREIGN KEY(OWNER_PERSONNEL_ID) REFERENCES PERSONNEL(PERSONNEL_ID)

EXEC SP_RENAME 'BATCH.ORIG_OWNR_PRSNNL_ID', 'ORIGINAL_OWNER_PERSONNEL_ID'
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_ORIGINAL_OWNER_PERSONNEL_ID FOREIGN KEY(ORIGINAL_OWNER_PERSONNEL_ID) REFERENCES PERSONNEL(PERSONNEL_ID)

EXEC SP_RENAME 'RVW_BATCH_PRSNNL', 'BATCH_PERSONNEL'
EXEC SP_RENAME 'BATCH_PERSONNEL.PRSNNL_ID', 'PERSONNEL_ID'
ALTER TABLE BATCH_PERSONNEL ADD CONSTRAINT BATCH_PERSONNEL_FK_BATCH_ID FOREIGN KEY(BATCH_ID) REFERENCES BATCH(BATCH_ID)
EXEC SP_RENAME 'REVIEWBATCHTOPERSONNEL', 'BATCH_PERSONNEL_FK_PERSONNEL_ID'

EXEC SP_RENAME 'NOTE.PRSNNL_ID', 'PERSONNEL_ID'
EXEC SP_RENAME 'NOTETOPERSONNEL', 'NOTE_FK_PERSONNEL_ID'

EXEC SP_RENAME 'PERSONNEL_ASSIGNMENT_TYPE.PRSNNL_ID', 'PERSONNEL_ID'
EXEC SP_RENAME 'PERSONASSIGNTYPESPERSON', 'PERSONNEL_ASSIGNMENT_TYPE_FK_PERSONNEL_ID'

EXEC SP_RENAME 'PERSONNEL_UNAVAILABILITY.PRSNNL_ID', 'PERSONNEL_ID'
EXEC SP_RENAME 'PERSONNEL_UNAVAIL_TO_PERSONNEL', 'PERSONNEL_UNAVAILABILITY_FK_PERSONNEL_ID'

EXEC SP_RENAME 'REVIEW.ORIG_RVWR_PRSNNL_ID', 'ORIGINAL_REVIEWER_PERSONNEL_ID'
EXEC SP_RENAME 'REVIEW_FK_ORIG_RVWR_PRSNNL_ID', 'REVIEW_FK_ORIGINAL_REVIEWER_PERSONNEL_ID'

EXEC SP_RENAME 'REVIEW_LEVEL.RVWR_PRSNNL_ID', 'REVIEWER_PERSONNEL_ID'
EXEC SP_RENAME 'REVIEW_LEVEL_FK_RVWR_PRSNNL_ID', 'REVIEW_LEVEL_FK_REVIEWER_PERSONNEL_ID'
EXEC SP_RENAME 'REVIEW_LEVEL.ORIG_RVWR_PRSNNL_ID', 'ORIGINAL_REVIEWER_PERSONNEL_ID'
EXEC SP_RENAME 'REVIEW_LEVEL_FK_ORIG_RVWR_PRSNNL_ID', 'REVIEW_LEVEL_FK_ORIGINAL_REVIEWER_PERSONNEL_ID'

EXEC SP_RENAME 'REVIEW_LOCATION.OWNER_PRSNNL_ID', 'OWNER_PERSONNEL_ID'
EXEC SP_RENAME 'REVIEW_LOCATION_FK_OWNER_PRSNNL_ID', 'REVIEW_LOCATION_FK_OWNER_PERSONNEL_ID'

----------------------------------------------------------------------------------------------------

ALTER TABLE LOAN_SELECTION ALTER COLUMN REVIEW_TYPE_ID UNIQUEIDENTIFIER NOT NULL

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'REVIEW_LEVEL_REF', 'REVIEW_LEVEL_TYPE_REF'
EXEC SP_RENAME 'REVIEW_LEVEL_TYPE_REF.REVIEW_LEVEL_ID', 'REVIEW_LEVEL_TYPE_ID'
EXEC SP_RENAME 'REVIEW_LEVEL_REF_PK', 'REVIEW_LEVEL_TYPE_REF_PK'
EXEC SP_RENAME 'DF_REVIEW_LEVEL_REF_REVIEW_LEVEL_ID', 'DF_REVIEW_LEVEL_TYPE_REF_REVIEW_LEVEL_TYPE_ID'

ALTER TABLE REVIEW DROP CONSTRAINT REVIEWTORVWLVLREF;
ALTER TABLE REVIEW DROP COLUMN REVIEW_LEVEL_ID

EXEC SP_RENAME 'REVIEW_LEVEL.REVIEW_LEVEL_ID', 'REVIEW_LEVEL_TYPE_ID'
EXEC SP_RENAME 'RVWLVLTORVWLVLREF', 'REVIEW_LEVEL_FK_REVIEW_LEVEL_TYPE_ID'
EXEC SP_RENAME 'REVIEW_LEVEL.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LEVEL_ITERATION_TIMEFRAME.REVIEW_LEVEL_ID', 'REVIEW_LEVEL_TYPE_ID'
EXEC SP_RENAME 'ITRATIONTIMEFRMTORVWLVL', 'RVW_LEVEL_ITERATION_TIMEFRAME_FK_REVIEW_LEVEL_TYPE_ID'

EXEC SP_RENAME 'RQST_FROM_LENDER.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
EXEC SP_RENAME 'RQST_FROM_LENDER_FK_REVIEW_LVL_ID', 'RQST_FROM_LENDER_FK_REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LVL_CASE_SUMMARY.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
EXEC SP_RENAME 'RVW_LVL_CASE_SUMMARY_FK_REVIEW_LVL_ID', 'RVW_LVL_CASE_SUMMARY_FK_REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LVL_DEFECT.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
EXEC SP_RENAME 'REVIEWLEVELDEFECTTORVWLVL', 'RVW_LVL_DEFECT_FK_REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LVL_FINDING.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
EXEC SP_RENAME 'FINDING_TO_REVIEW_LEVEL_FK', 'RVW_LVL_FINDING_FK_REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LVL_INDEM.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
EXEC SP_RENAME 'RVWLVLINDEMTORVWLEVEL', 'RVW_LVL_INDEM_FK_REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LVL_QSTN_ANSWERS.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
EXEC SP_RENAME 'ANSWERS_TO_REVIEW_LEVEL_FK', 'RVW_LVL_QSTN_ANSWERS_FK_REVIEW_LEVEL_ID'

EXEC SP_RENAME 'RVW_LVL_RFRRL.REVIEW_LVL_ID', 'REVIEW_LEVEL_ID'
ALTER TABLE RVW_LVL_RFRRL ADD CONSTRAINT RVW_LVL_RFRRL_FK_REVIEW_LEVEL_ID FOREIGN KEY(REVIEW_LEVEL_ID) REFERENCES REVIEW_LEVEL(REVIEW_LEVEL_ID)

----------------------------------------------------------------------------------------------------

ALTER TABLE REVIEW_QATREE ADD CONSTRAINT REVIEW_QATREE_PK PRIMARY KEY NONCLUSTERED(REVIEW_ID, QATREE_ID)

----------------------------------------------------------------------------------------------------

ALTER TABLE SELECTION_REASON ALTER COLUMN UNIVERSE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE SELECTION_REASON ADD CONSTRAINT SELECTION_REASON_FK_UNIVERSE_ID FOREIGN KEY(UNIVERSE_ID) REFERENCES UNIVERSE_REF(UNIVERSE_ID)

UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='ENDR') WHERE CODE = 'MONTHLY_RISK_THRESHOLD'
UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='ENDR') WHERE CODE = 'LENDER_INCREASED_SAMPLING'
UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='ENDR') WHERE CODE = 'UNDERWRITER_DECREASED_SAMPLING'
UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='ENDR') WHERE CODE = 'MONTHLY_RANDOM'
UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='ECLM') WHERE CODE = 'EARLY_CLAIM'
UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='EPDF') WHERE CODE = 'EARLY_PAYMENT_DEFAULT'
UPDATE SELECTION_REASON SET UNIVERSE_ID = (SELECT UNIVERSE_ID FROM UNIVERSE_REF WHERE CODE='LMON') WHERE CODE = 'LENDER_MONITORING'

----------------------------------------------------------------------------------------------------

DROP TABLE lender_lookup

----------------------------------------------------------------------------------------------------

ALTER TABLE QATREE DROP COLUMN DEFECT_CD
ALTER TABLE QATREE ADD CONSTRAINT QATREE_FK_DEFECT_ID FOREIGN KEY(DEFECT_ID) REFERENCES DEFECT(DEFECT_ID)

ALTER TABLE QATREE_QUESTION ADD CONSTRAINT QATREE_QUESTION_FK_QA_OUTCM_ID FOREIGN KEY(QA_OUTCM_ID) REFERENCES QATREE_OUTCOME(QA_OUTCM_ID)
ALTER TABLE QATREE_QUESTION ADD CONSTRAINT QATREE_QUESTION_FK_PARENT_QUESTION_ID_QATREE_ID FOREIGN KEY(PARENT_QUESTION_ID, QATREE_ID) REFERENCES QATREE_QUESTION(QUESTION_ID, QATREE_ID)
ALTER TABLE QATREE_QUESTION ADD CONSTRAINT QATREE_QUESTION_FK_PARENT_QUESTION_ID FOREIGN KEY(PARENT_QUESTION_ID) REFERENCES QUESTION_REFERENCE(QUESTION_ID)

EXEC SP_RENAME 'QUESTIONREFTOQATREE', 'QATREE_QUESTION_FK_QUESTION_ID'
EXEC SP_RENAME 'QUESTIONTOQATREE', 'QATREE_QUESTION_FK_QATREE_ID'

----------------------------------------------------------------------------------------------------

ALTER TABLE REVIEW_TYPE_DEFECT ADD CONSTRAINT REVIEW_TYPE_DEFECT_FK_DEFECT_ID FOREIGN KEY(DEFECT_ID) REFERENCES DEFECT(DEFECT_ID)

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'QATREE_OUTCOME.QA_OUTCM_ID', 'QATREE_OUTCOME_ID'
ALTER TABLE QATREE_OUTCOME ADD CONSTRAINT QATREE_OUTCOME_FK_DEFECT_ID FOREIGN KEY(DEFECT_ID) REFERENCES DEFECT(DEFECT_ID)
ALTER TABLE QATREE_OUTCOME DROP COLUMN DEFECT_CD

EXEC SP_RENAME 'QATREE_QUESTION.QA_OUTCM_ID', 'QATREE_OUTCOME_ID'
EXEC SP_RENAME 'QATREE_QUESTION_FK_QA_OUTCM_ID', 'QATREE_QUESTION_FK_QATREE_OUTCOME_ID'

EXEC SP_RENAME 'QATREE_OUTCM_CAUSES', 'QATREE_OUTCOME_DEFECT_CAUSE'
EXEC SP_RENAME 'QATREE_OUTCOME_DEFECT_CAUSE.QA_OUTCM_ID', 'QATREE_OUTCOME_ID'
EXEC SP_RENAME 'QATREE_OUTCM_CAUSES_PK', 'QATREE_OUTCOME_DEFECT_CAUSE_PK'
ALTER TABLE QATREE_OUTCOME_DEFECT_CAUSE DROP COLUMN DEFECT_CAUSE_CD
EXEC SP_RENAME 'QATREEOCCAUSETOOUTCOME', 'QATREE_OUTCOME_DEFECT_CAUSE_FK_QATREE_OUTCOME_ID'
ALTER TABLE QATREE_OUTCOME_DEFECT_CAUSE ADD CONSTRAINT QATREE_OUTCOME_DEFECT_CAUSE_FK_DEFECT_CAUSE_ID FOREIGN KEY(DEFECT_CAUSE_ID) REFERENCES DEFECT_CAUSE(DEFECT_CAUSE_ID)

EXEC SP_RENAME 'QATREE_OUTCM_SEVERITY', 'QATREE_OUTCOME_DEFECT_SEVERITY'
EXEC SP_RENAME 'QATREE_OUTCOME_DEFECT_SEVERITY.QA_OUTCM_ID', 'QATREE_OUTCOME_ID'
EXEC SP_RENAME 'QATREE_OUTCM_TIERS_PK', 'QATREE_OUTCOME_DEFECT_SEVERITY_PK'
ALTER TABLE QATREE_OUTCOME_DEFECT_SEVERITY DROP COLUMN SEVERITY_TIER_CD
EXEC SP_RENAME 'QATREEOUTCOMETOTIERS', 'QATREE_OUTCOME_DEFECT_SEVERITY_FK_QATREE_OUTCOME_ID'
ALTER TABLE QATREE_OUTCOME_DEFECT_SEVERITY ADD CONSTRAINT QATREE_OUTCOME_DEFECT_SEVERITY_FK_DEFECT_SEVERITY_ID FOREIGN KEY(DEFECT_SEVERITY_ID) REFERENCES DEFECT_SEVERITY(DEFECT_SEVERITY_ID)

EXEC SP_RENAME 'QATREE_OUTCM_SOURCES', 'QATREE_OUTCOME_DEFECT_SOURCE'
EXEC SP_RENAME 'QATREE_OUTCOME_DEFECT_SOURCE.QA_OUTCM_ID', 'QATREE_OUTCOME_ID'
EXEC SP_RENAME 'QATREE_OUTCM_SOURCES_PK', 'QATREE_OUTCOME_DEFECT_SOURCE_PK'
ALTER TABLE QATREE_OUTCOME_DEFECT_SOURCE DROP COLUMN DFCT_SOURCE_CD
EXEC SP_RENAME 'QATREEOCSRCESTOOUTCOME', 'QATREE_OUTCOME_DEFECT_SOURCE_FK_QATREE_OUTCOME_ID'
ALTER TABLE QATREE_OUTCOME_DEFECT_SOURCE ADD CONSTRAINT QATREE_OUTCOME_DEFECT_SOURCE_FK_DEFECT_SOURCE_ID FOREIGN KEY(DEFECT_SOURCE_ID) REFERENCES DEFECT_SOURCE(DEFECT_SOURCE_ID)

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'RVW_LEVEL_ITERATION_TIMEFRAME', 'REVIEW_LEVEL_ITERATION_TIMEFRAME'
EXEC SP_RENAME 'REVIEW_LEVEL_ITERATION_TIMEFRAME.RVW_LVL_ITERATION_TIMEFRAME_ID', 'REVIEW_LEVEL_ITERATION_TIMEFRAME_ID'
EXEC SP_RENAME 'RVWLVLITERATION_PK', 'REVIEW_LEVEL_ITERATION_TIMEFRAME_PK'
EXEC SP_RENAME 'RVW_LEVEL_ITERATION_TIMEFRAME_FK_REVIEW_LEVEL_TYPE_ID', 'REVIEW_LEVEL_ITERATION_TIMEFRAME_FK_REVIEW_LEVEL_TYPE_ID'
EXEC SP_RENAME 'RVW_LEVEL_ITERATION_TIMEFRAME_FK_SELECTION_REASON_ID', 'REVIEW_LEVEL_ITERATION_TIMEFRAME_FK_SELECTION_REASON_ID'

ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ADD CREATED_BY CHAR(6) NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ADD CREATED_TS DATETIME NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ADD UPDATED_BY CHAR(6) NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ADD UPDATED_TS DATETIME NULL
GO

UPDATE REVIEW_LEVEL_ITERATION_TIMEFRAME SET CREATED_BY='jchav', CREATED_TS=CURRENT_TIMESTAMP, UPDATED_BY='jchav', UPDATED_TS=CURRENT_TIMESTAMP
GO

ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ALTER COLUMN CREATED_BY CHAR(6) NOT NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ALTER COLUMN CREATED_TS DATETIME NOT NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ALTER COLUMN UPDATED_BY CHAR(6) NOT NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ALTER COLUMN UPDATED_TS DATETIME NOT NULL
GO

ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ADD CONSTRAINT REVIEW_LEVEL_ITERATION_TIMEFRAME_UQ_SELECTION_REASON_ID_REVIEW_LEVEL_TYPE_ID UNIQUE(SELECTION_REASON_ID, REVIEW_LEVEL_TYPE_ID)
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE LOAN_SELECTION_CASE_SUMMARY DROP CONSTRAINT LOANSELCASESUMTOUNIVERSEREF
ALTER TABLE LOAN_SELECTION_CASE_SUMMARY DROP COLUMN UNIVERSE_REF_ID
GO

ALTER TABLE LOAN_SELECTION_PENDING DROP COLUMN MODEL_SCORE
ALTER TABLE LOAN_SELECTION_PENDING DROP COLUMN MODEL_ID
GO

ALTER TABLE LOAN_SELECTION DROP COLUMN SELECTION_METHOD
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE MODEL_SCORE DROP COLUMN SCORE_CALCULATED_DT
ALTER TABLE MODEL_SCORE DROP COLUMN  UNIVERSE_ID
GO

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'SCORING_FACTORS', 'SCORING_FACTOR'
EXEC SP_RENAME 'SCORING_FACTOR.FACTOR_ID', 'SCORING_FACTOR_ID'
GO

----------------------------------------------------------------------------------------------------

EXEC SP_RENAME 'SCORING_MODEL_FACTORS', 'SCORING_MODEL_FACTOR'
EXEC SP_RENAME 'SCORING_MODEL_FACTOR.FACTOR_ID', 'SCORING_FACTOR_ID'
EXEC SP_RENAME 'SCORING_MODEL_FACTORS_FK_MODEL_ID_MODEL_VER_NUM', 'SCORING_MODEL_FACTOR_FK_MODEL_ID_MODEL_VER_NUM'
EXEC SP_RENAME 'SCORINGMODELFACTTOSCORINGFAC', 'SCORING_MODEL_FACTOR_FK_SCORING_FACTOR_ID'
EXEC SP_RENAME 'SCORINGMODELFACTTOSCORINGMODEL', 'SCORING_MODEL_FACTOR_FK_MODEL_ID'
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE MODEL_SCORE ADD CONSTRAINT MODEL_SCORE_FK_MODEL_ID FOREIGN KEY(MODEL_ID) REFERENCES SCORING_MODEL(MODEL_ID)
ALTER TABLE MODEL_SCORE ALTER COLUMN MODEL_SCORE numeric(10, 5) NULL
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE DICT_METADATA_ENTITY ALTER COLUMN DB_VIEW_OR_TABLE VARCHAR(128) NOT NULL
ALTER TABLE DICT_METADATA_FIELD ALTER COLUMN DB_COLUMN VARCHAR(128) NOT NULL
GO

----------------------------------------------------------------------------------------------------

ALTER TABLE QATREE_QSTN_CONDITION DROP CONSTRAINT QATREEQSTNCONDTOQAQSTN
ALTER TABLE QATREE_QSTN_CONDITION ADD CONSTRAINT QATREE_QSTN_CONDITION_FK_QUESTION_ID_QATREE_ID FOREIGN KEY(QUESTION_ID, QATREE_ID) REFERENCES QATREE_QUESTION(QUESTION_ID, QATREE_ID)

----------------------------------------------------------------------------------------------------
		]]>
        </sql>
    </changeSet>    
	<changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2134_0002" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
alter procedure [dbo].[sp_create_qa_model]
	(@from_model_id uniqueidentifier,
	@new_model_name varchar(30),
	@description varchar(255),
	@login_credential char(6))
	as

	declare
		@to_model_id uniqueidentifier

	insert into qa_model
	(model_name,
	version_num,
	description,
	created_by,
	created_ts)
	values
	(@new_model_name,
	(select max(version_num) + 1 from qa_model),
	@description,
	@login_credential,
	getdate())

	select @to_model_id = model_id
	from qa_model
	where version_num =
	(select max(version_num) from qa_model)

	insert into DICT_METADATA_FIELD_MODEL
	(ENTITY_NAME, 
		FIELD_NAME, 
		MODEL_ID, 
		CREATED_BY, 
		CREATED_TS,
		ORDER_NUMBER)
	select 
		ENTITY_NAME, 
		FIELD_NAME,
		@to_model_id,
		@login_credential, 
		getdate() ,
		ORDER_NUMBER
	from DICT_METADATA_FIELD_MODEL 
	where MODEL_ID = @from_model_id

	create table #t_defect(
			defect_cd varchar(16) null,
			description varchar(150) null,
			review_category varchar(16) null,
			relative_order int null,
			old_defect_id uniqueidentifier null,
			new_defect_id uniqueidentifier null default newid())


	insert into #t_defect
	(defect_cd,
	description,
	review_category,
	relative_order,
	old_defect_id)
	select
	defect_cd,
	description,
	review_category,
	relative_order,
	defect_id
	from defect
	where model_id = @from_model_id

	insert into defect
	(defect_cd,
	description,
	review_category,
	relative_order,
	defect_id,
	model_id,
	created_by,
	created_ts)
	select 
	defect_cd,
	description,
	review_category,
	relative_order,
	new_defect_id,
	@to_model_id,
	@login_credential,
	getdate()
	from #t_defect

	insert into DICT_METADATA_FIELD_DEFECT
	(ENTITY_NAME, 
		FIELD_NAME, 
		DEFECT_CD, 
		CREATED_BY, 
		CREATED_TS, 
		DEFECT_ID,
		ORDER_NUMBER)
	select 
		a.ENTITY_NAME, 
		a.FIELD_NAME, 
		a.DEFECT_CD, 
		@login_credential, 
		getdate(), 
		b.new_DEFECT_ID,
		ORDER_NUMBER
	from DICT_METADATA_FIELD_DEFECT a,
			#t_defect b
	where a.DEFECT_ID = b.old_defect_id

	insert into REVIEW_TYPE_DEFECT
	(CREATED_BY, 
		CREATED_TS,
		ORDER_NUMBER, 
		REVIEW_TYPE_ID, 
		DEFECT_ID)
	select 
		@login_credential, 
		getdate(), 
		ORDER_NUMBER, 
		REVIEW_TYPE_ID,
		b.new_DEFECT_ID
	from REVIEW_TYPE_DEFECT a,
			#t_defect b
	where a.DEFECT_ID = b.old_defect_id	

	insert into defect_remedy_type
	(defect_id,
	remedy_type_id,
	created_by,
	created_ts)
	select
	b.new_defect_id,
	remedy_type_id,
	@login_credential,
	getdate()
	from defect_remedy_type a,
			#t_defect b
	where a.DEFECT_ID = b.old_defect_id							
						
	create table #t_defect_cause(
			old_defect_cause_id uniqueidentifier null,
			defect_cause_cd varchar(16) null,
			defect_cd varchar(16) not null,
			description varchar(150) null,
			new_defect_id uniqueidentifier null,
			new_defect_cause_id uniqueidentifier null default newid(),
			relative_order int)
							   
	insert into #t_defect_cause
	(old_defect_cause_id ,
	defect_cause_cd ,
	defect_cd ,
	description, 
		new_defect_id ,
		relative_order)
	select 
	defect_cause_id ,
	defect_cause_cd ,
	a.defect_cd ,      
	a.description,     
	b.new_defect_id,
	a.relative_order
	from defect_cause a,
			#t_defect b
	where a.defect_id = b.old_defect_id

	insert into defect_cause
	(defect_cause_id ,
	defect_cause_cd ,
	defect_cd ,
	description, 
		defect_id,
	created_by,
	created_ts )
	select  
		new_defect_cause_id ,
	defect_cause_cd ,
	defect_cd ,
	description, 
		new_defect_id,
	@login_credential,
	getdate()
	from #t_defect_cause 

	create table #t_defect_source(
			old_defect_source_id uniqueidentifier null,
			dfct_source_cd varchar(16) null,
			defect_cd varchar(16) not null,
			description varchar(150) null,
			new_defect_id uniqueidentifier null,
			new_defect_source_id uniqueidentifier null default newid(),
			relative_order int)
							   
	insert into #t_defect_source
	(old_defect_source_id,
	dfct_source_cd,
	defect_cd,
	description,
	new_defect_id,
	relative_order)
	select 
		defect_source_id,
	dfct_source_cd,
	a.defect_cd,
	a.description,
	new_defect_id ,
	a.relative_order      
	from defect_source a,
			#t_defect b
	where a.defect_id = b.old_defect_id

	insert into defect_source
	(defect_source_id,
	dfct_source_cd,
	defect_cd,
	description,
	defect_id ,
	created_by,
	created_ts,
	relative_order)
	select 
		new_defect_source_id,
	dfct_source_cd,
	defect_cd,
	description,
	new_defect_id ,     
		@login_credential,
	getdate(),
	relative_order
	from #t_defect_source 

	create table #t_defect_severity(
			old_defect_severity_id uniqueidentifier null,
			severity_tier_cd varchar(16) null,
			defect_cd varchar(16) not null,
			description varchar(1024) null,
			new_defect_id uniqueidentifier null,
			new_defect_severity_id uniqueidentifier null default newid(),
			relative_order int null,
			example_text varchar(1024) null)
							   
	insert into #t_defect_severity
	(old_defect_severity_id,
	severity_tier_cd,
	defect_cd,
	description,
	new_defect_id,
    relative_order,
	example_text)
	select 
		defect_severity_id,
	severity_tier_cd,
	a.defect_cd,
	a.description,
	new_defect_id,
    a.relative_order,
	example_text
	from defect_severity a,
			#t_defect b
	where a.defect_id = b.old_defect_id

	insert into defect_severity
	(defect_severity_id,
	severity_tier_cd,
	defect_cd,
	description,
	defect_id ,
	created_by,
	created_ts,
    relative_order,
	example_text)
	select 
		new_defect_severity_id,
	severity_tier_cd,
	defect_cd,
	description,
	new_defect_id ,     
		@login_credential,
	getdate(),
    relative_order,
	example_text
	from #t_defect_severity 

	insert into finding_rating_rules_admin (defect_id, defect_cause_id, defect_source_id,unacceptable_rating_threshold)
	select c.new_defect_id, c.new_defect_cause_id, s.new_defect_source_id, o.unacceptable_rating_threshold
		from #t_defect_cause c, 
		#t_defect_source s, 
		finding_rating_rules_admin o
		where o.defect_cause_id = c.old_defect_cause_id 
		and o.defect_source_id = s.old_defect_source_id 
						   
	create table #t_qatree(
			new_qatree_id uniqueidentifier null default newid(),
			old_qatree_id uniqueidentifier null,
			new_model_id uniqueidentifier not null,
			new_defect_id uniqueidentifier null,
			defect_cd varchar(16) null,
			enable_pre_qual_question_ind char(1) null)

							   
	insert into #t_qatree
	(old_qatree_id, 
		new_model_id,
	new_defect_id,
	defect_cd,
	enable_pre_qual_question_ind)
	select
	q.qatree_id, 
		@to_model_id,
	t.new_defect_id,
	t.defect_cd,
	enable_pre_qual_question_ind
	from #t_defect t, qatree q
	where t.old_defect_id = q.defect_id

	insert into qatree
	(qatree_id, 
		created_by, 
		created_ts, 
		model_id, 
		defect_id, 
	enable_pre_qual_question_ind)  
	select 
		new_qatree_id,
	@login_credential,
	getdate(),
	new_model_id, 
	new_defect_id, 
	enable_pre_qual_question_ind
	from #t_qatree 


	create table #t_outcome (
			new_qatree_outcome_id uniqueidentifier null default newid(),
			old_qatree_outcome_id uniqueidentifier null,
			new_defect_id uniqueidentifier null)

	insert into #t_outcome (
		old_qatree_outcome_id, 
		new_defect_id
		)
		select o.qatree_outcome_id, 
				t.new_defect_id
		from #t_defect t, 
			qatree_outcome o
		where t.old_defect_id = o.defect_id

	insert into qatree_outcome 
	(qatree_outcome_id, 
		defect_id, 
		created_by,  
		created_ts,  
		source_filter_question_id)
	select new_qatree_outcome_id, 
			new_defect_id, 
			@login_credential, 
			getdate(), 
			q.source_filter_question_id
	from #t_outcome t, 
			qatree_outcome q
	where t.old_qatree_outcome_id = q.qatree_outcome_id



	insert into qatree_outcome_defect_cause
	(defect_cause_id, 
		qatree_outcome_id, 
		created_by, 
		created_ts)
	select tc.new_defect_cause_id, 
			t.new_qatree_outcome_id, 
			@login_credential, 
			getdate()
	from #t_outcome t, 
			#t_defect_cause tc, 
			qatree_outcome_defect_cause c
	where t.old_qatree_outcome_id = c.qatree_outcome_id 
		and c.defect_cause_id = tc.old_defect_cause_id



	insert into qatree_outcome_defect_source 
	(defect_source_id, 
		qatree_outcome_id, 
		created_by, 
		created_ts)
	select tc.new_defect_source_id, 
			t.new_qatree_outcome_id, 
			@login_credential, 
			getdate()
	from #t_outcome t, 
			#t_defect_source tc, 
			qatree_outcome_defect_source c
	where t.old_qatree_outcome_id = c.qatree_outcome_id 
		and c.defect_source_id = tc.old_defect_source_id

	insert into qatree_outcome_defect_severity 
	(defect_severity_id, 
		qatree_outcome_id, 
		created_by, 
		created_ts)
	select tc.new_defect_severity_id, 
			t.new_qatree_outcome_id, 
			@login_credential, 
			getdate()
	from #t_outcome t, 
			#t_defect_severity tc, 
			qatree_outcome_defect_severity c
	where t.old_qatree_outcome_id = c.qatree_outcome_id 
		and c.defect_severity_id = tc.old_defect_severity_id

	create table #t_question (
			new_question_id uniqueidentifier null default newid(),
			old_question_id uniqueidentifier null,
			new_qatree_id uniqueidentifier null
			)

	insert into #t_question 
	(old_question_id, 
		new_qatree_id)
	select qu.question_id, 
			qa.new_qatree_id 
	from qatree_question qu, 
			#t_qatree qa
	where qu.qatree_id = qa.old_qatree_id

	insert into QUESTION_REFERENCE
	(QUESTION_ID, 
		QUESTION_DESCRIPTION, 
		VALUE_TO_TRIGGER_ACTION, 
		RESPONSE_TYPE, 
		ANSWER_VALUES, 
		created_by,
		created_ts)
	select   
		a.new_QUESTION_ID, 
		QUESTION_DESCRIPTION, 
		VALUE_TO_TRIGGER_ACTION, 
		RESPONSE_TYPE, 
		ANSWER_VALUES, 
		@login_credential,
		getdate()
	from #t_question a,
			QUESTION_REFERENCE b
	where a.old_question_id = b.QUESTION_ID


	insert into qatree_question 
	(question_id, 
		qatree_id, 
		question_number, 
		question_reference, 
		qatree_outcome_id, 
		parent_question_id, 
		created_by,  
		created_ts,  
		order_number)
	select t.new_question_id, 
			t.new_qatree_id, 
			q.question_number, 
			q.question_reference, 
			o.new_qatree_outcome_id, 
			q.parent_question_id, 
			@login_credential, 
			getdate(),  
			q.order_number
	from #t_question t
	join qatree_question q
	on t.old_question_id = q.question_id 
	left outer join #t_outcome o
	on q.qatree_outcome_id = o.old_qatree_outcome_id

	insert into QA_MODEL_PREQUAL
	(QUESTION_ID,
		PRE_QUAL_POTENTIAL_ANSWER_CD, 
		QUESTION_REF_ID_CSV,
		description
	)
	select 
		a.new_QUESTION_ID,
		PRE_QUAL_POTENTIAL_ANSWER_CD, 
		QUESTION_REF_ID_CSV,
		b.description
	from #t_question a,
			QA_MODEL_PREQUAL b
	where a.old_question_id = b.QUESTION_ID
						
	update QATREE_QUESTION
	set PARENT_QUESTION_ID = b.new_question_id
	from QATREE_QUESTION a,
			#t_question b
	where a.PARENT_QUESTION_ID = b.old_question_id

	update QATREE_OUTCOME
	set SOURCE_FILTER_QUESTION_ID = b.new_question_id
	from QATREE_OUTCOME a,
			#t_question b
	where a.SOURCE_FILTER_QUESTION_ID = b.old_question_id

	insert into QATREE_QSTN_CONDITION
	(entity_name, 
		field_name, 
		question_id, 
		qatree_id, 
		comparison_values, 
		condition_operator, 
		created_by, 
		created_ts)
	select
	entity_name, 
		field_name, 
		new_question_id, 
		new_qatree_id, 
		comparison_values, 
		condition_operator, 
		@login_credential,
		getdate()
	from #t_question tq,
			QATREE_QSTN_CONDITION qqc
	where tq.old_question_id = qqc.QUESTION_ID
		]]>
        </sql>
    </changeSet>    
	<changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2134_0003" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
ALTER proc [dbo].[sp_get_case]
	(@case_number char(11))
	as
						
	insert into loan_selection_case_summary
	(SELECTION_REQUEST_ID
	,APRSL_CMPLTN_DT
	,CASE_NUMBER
	,SELECTION_ID
	,PREQUAL_DT
	,ADDTNL_10PCT_IPL_USAGE_AMT
	,ADDTNL_10PCT_IPL_USAGE_IND
	,ADP_CODE
	,ALLOW_CLSG_COST
	,AMORT_TYP_CD
	,APLCTN_MTHD
	,ARM_ADJ_PRD
	,ARM_INDX_EXPCTD_RT
	,ARM_INDX_IND
	,ARM_IND
	,ARM_MRGN_AMT
	,ARM_DT
	,COUNT_AUS
	--,AUS_SCORE_CODE
	,BSMT_CD
	,BNKRPTCY_CD
	,BNKRPTCY_DT
	--,BORR_NM
	,BORR_BRTH_DT
	,BORR_CNSL_TYP
	--,BORR_EMPLMNT_IND
	,BORR_GENDER
	--,BORR_HSNG_EXP
	,BORR_TYP
	,BUY_DWN_IND
	,CS_ESTAB_DT
	,CCT_REINS_DT
	,CS_TYP
	,CASHOUT_REFI_IND
	,CLAIM_TYPE
	,CLSNG_DT
	,CF_EQUIVICAL_ASSETS_IND
	,CF_EXPECTED_SSI_IND
	,CF_HECM_SUFFICIENT_IND
	,CF_IMPUTED_INCOME_IND
	,CF_NBS_INCOME_IND
	,CF_OT_INCOME_IND
	,CF_OTHER_INCOME_IND
	,CF_PROP_PMT_HIST_IND
	,CONDO_FEE_CURR_IND
	,CONDO_FEE_DELINQ_IND
	,CONST_CD
	,CONST_STS_CD
	--,PRC_EXCL_CLSNG_AMT
	--,PRC_INCL_CLSNG_AMT
	,CORP_ADVNC_AMT
	,CURR_DFLT_90DAY_IND
	--,DFLT_ASGNMNT_DT
	--,DFLT_CRTN_DT
	,CURR_DFLT_CYC_DT
	,CURR_DFLT_EPISODE_NBR
	--,CURR_DFLT_MM_CYC_DT
	,CURR_DFLT_RSN_CD
	,CURR_DFLT_STS_CD
	,CURR_DFLT_STS_DT
	--,CURR_DFLT_STS_IND
	,CURR_DFLT_STS_SUMMARY_CD
	--,DAYS_IN_DEFAULT
	--,DFLT_90DAY_IND
	--,DFLT_CYC_DT
	--,DFLT_EPISODE_NBR
	--,FT_IN_EPS_2MNTH_DELQ_DT
	--,DFLT_HIST_LOSSMIT_CD
	--,DFLT_MM_CYC_DT
	--,DFLT_RSN_CD
	--,DFLT_SRVCR
	--,DFLT_STS_CD
	--,DFLT_STS_DT
	--,DFLT_STS_SUMMARY_CD
	--,DFLT_TRNSCTN_DT
	,DPNDNT_CNT
	--,DERIVED_OPTN_USED_CD
	--,DFLT_HIST_FT_IN_EPS_3M_DELQ_DT
	,DIR_LENDING_BRANCH_IND
	,EARLY_CLAIM_IND
	,EARLY_DEFAULT_IND
	--,EFFECTIVE_FICO_SCORE
	--,END_CD
	,ENDRSMNT_DT
	,ENDRSMNT_RVW_PRSNNL_ID
	,ENERGY_EFF_MRTG
	,FCTRY_FBRCT
	,FEMA_FLOOD_AREA_IND
	,FHAC_ADDR_CHG
	--,FICO_SCORE
	,FNCNG_TYP
	,FRCLSR_IND
	--,FT_IN_EPS_2MNTH_DELQ_IND
	,FT_IN_EPS_3MNTH_DELQ_DT
	--,FT_IN_EPS_3MNTH_DELQ_IND
	--,FTE_2MNTH_DELQ_DT
	,GIFT_LTR_AMT
	,GIFT_LTR_2_AMT
	,GIFT_LTR_SRC
	,GIFT_LTR_TIN
	--,HARDCOPY_DOCS_IND
	,HECM_ASSETS
	,HECM_COUNSEL_DT
	,HECM_LIENS
	--,HECM_MNTHLY_INC
	,HECM_PRNCPL_LMT
	--,HLDR_MTGEE10_A43C
	,HLDR_MTGEE5_A43
	,HSNG_PGM_CD
	,INIT_DISBURSEMENT_LIMIT
	,INIT_FEE
	--,INIT_MIP_FACTOR
	,INSRNC_STATUS_CD
	,INT_RT
	--,LAST_CS_SCORE_DT
	,MISC_LNDR_INSRNC_IND
	,LE_COMPOUND_RATE
	,LE_EXPECTED_RATE
	,LE_PROJECTED_AMT
	,LESA_FUNDING_AMT
	,LESA_FUNDING_TYPE
	,LE_SETASIDE_AMT
	,LE_TALC_MONTHS
	--,MONTHLY_P_I
	,LOAN_NBR
	,LOAN_PRPS
	,LOAN_PRPS_FRWD_PYMT_IND
	,LOAN_PRPS_IMPRVMNT_IND
	,LOAN_PRPS_INCM_IND
	,LOAN_PRPS_INSRNC_IND
	,LOAN_PRPS_LEISURE_IND
	,LOAN_PRPS_MEDCL_IND
	,LOAN_PRPS_OTHR_IND
	,PROP_TYP
	,LOAN_PRPS_TAXES_IND
	,LOAN_PRPS_TEXT
	,LTV_CAT
	--,LTV_CAT_NEW
	--,LTV_CAT_OLD
	,RATIO_LOAN_TO_VL_NEW
	--,RATIO_LOAN_TO_VL_OLD
	,LOAN_TYPE
	,LOSSMIT_CD
	,MNDTRY_OBLGTNS_AMT
	--,MANDATORY_OBLIGS_AMT
	,MARRIED_TO_NBS_IND
	,CURR_MNTHLY_MIP
	,MISC_AUS_DCSN_CD
	,MISC_AUS_IND
	--,RANDOM_NUMBER
	,ME_DEBT_AMT
	,ME_OTHER_AMT
	,ME_RE_AMT
	,ME_TOTAL_AMT
	,MI_IMPUTED_AMT
	,MI_OTHER_AMT
	,MI_TOTAL_AMT
	,MNTHLY_SET_ASIDE
	,MORT_EXCLD_FNCD_MIP
	,MIP_FINANCED_IND
	--,NBR_MONTHS
	,NBS_FIRST_MIDDLE_LAST
	,NBRHD_PCT_OWNED
	,NBRHD_PRICE
	--,MAX_CLAIM_AMT_NEW
	,NOR_ISS_RPT_DT
	,NBR_BTHRMS
	,NBR_BDRM
	,NBR_RMS
	,NUM_LIVING_UNITS
	--,OCPNCY_STS
	,OCPNCY_STS_CD
	,OCPNCY_STS_DT
	--,MAX_CLAIM_AMT_OLD
	,OLDST_UNPD_DT
	,ORIG_MRTG_AMT
	,ORGNTNG_MTGEE5
	,ORGNTNG_MTGEE10_ID
	,TYP_ORGNTNG_MTGEE
	,OTHER_DEBT_CURR_IND
	,OTHER_DEBT_LATE_PMT_IND
	,PRE_RVW_DCSN
	,PRE_CLSNG_IND
	--,PREQUAL_OUTPUT
	,PREV_COMPLT_SBDVSN_IND
	,PRNCPL_RDCTN_AMT
	,PRIOR_SALE_RQRD_IND
	,PRCSNG_TYP
	,PRODUCT_TYPE_ID
	,PROG_ID_F17
	,DT_ACQ
	,PROP_ADDR_ST
	,PRPRTY_APRSL_VL
	,PC_CONDO_FEE_AMT
	,PC_FLOOD_INS_AMT
	,PC_HAZ_INS_AMT
	,PC_OTHER_AMT
	,PC_RE_TAX_AMT
	,PC_SETASIDE_TOT_AMT
	,PC_TOTAL_AMT
	,PRPRTY_CNVRSN_TYP
	,PD_STRMLN_FLG
	--,PYMTS_BFR_FRST_MISSED_PYMT
	,RATIO_ORE_TEI
	--,RATIO_FIX_TEI
	,PTI_CAT
	--,RATIO_TMP_TEI
	,RE_DEBT_CURR_IND
	,RE_DEBT_LATE_PMT_IND
	,RE_TAX_CURR_IND
	,RE_TAX_DELINQ_IND
	,RFNC_CD
	--,RFNC_IND
	,RFNC_NEXT_CASE_NBR
	,RPR_SET_ASIDE
	--,RQRD_INVEST
	,RI_FAMILY_SIZE
	,RI_SHORTFALL_AMT
	,RI_STANDARD_AMT
	,RI_TOTAL_AMT
	,REVOLVE_DEBT_CURR_IND
	,REVOLVE_DEBT_LATE_PMT_IND
	,NBRHD_CD
	,RCV_SALE_DT
	,SCNDRY_FNC_SRC
	,SECONDARY_FINANCE_AMT
	,SELLER_CNTRBTN
	,SEND_MIC_IND
	,OLD_SRVCR_MTGEE
	--,SRVCR_MTGEE10_A43C
	,SRVCR_MTGEE5_A43
	--,SFPCS_MTGEE_ID
	,SNGL_DSBRSE_LMP_SUM_PMT_OPT
	,PCT_1_FMLY
	,SOA_CD
	,SPNSR_MTGEE10_ID
	--,SQNC_NBR
	,STRMNLN_REFI_TYPE
	--,STRT_STOP_EPS_IND
	,SBDVSN_SPOT_LOT
	--,TAX_INSUR_YR_1_PMTS
	,TAXES_INSRNC_FRST_YR_AMT
	--,TRV_SLCT_RSN_CD
	,TERM
	,TERM_TYP_CD
	,TOT_ANN_EFF_INCM
	--,TOT_ASSETS
	--,TOT_CLSNG_CSTS
	--,TOT_FIXED_PYMT
	,TOT_MNTHLY_EFF_INCM
	--,TOT_MNTHLY_MTG_PYMT
	,TOT_ACQ_COSTS
	,TRNSMSN_TYP
	,UFMIP_PD_AMT
	,UFMIP_PD_CASH
	,UFMIP_EARNED_CURR_MM
	,UFMIP_FACTOR
	,UNDERWRITER_ID
	,UNDRWRTING_MTGEE5
	,UNPD_BAL
	,VAL_PLUS_CLSNG
	,CREATED_BY
	,CREATED_TS
	,UPDATED_BY
	,UPDATED_TS
	,BLDG_TYP
	--,DCSN_CD
	,REO_100_DOWN_PMT_PROG_IND
	--,AFFORD_HOUS_PROV_EIN
	,APPRAISER_NAME
	--,ASSETS_AFTER_CLOSING
	--,ASSETS_AFTER_CLOSING_ENDRS
	,ASSETS_AFTER_CLOSING_UW
	,ASSUMED_LOAN_IND
	,RATIO_FIX_TEI_ENDRS
	,RATIO_FIX_TEI_UW
	,BACK_TO_WORK_IND
	,BNKRPTCY_ANY_IND
	,BORR_1_FIRST_TIME_BUYER_IND
	,BORR_1_NAME
	,BORR_1_RENTING_IND
	,BORR_1_SELF_EMPL_IND
	,BORR_1_SSN
	--,BORR_1_YEARS_CURRENT_JOB
	--,BORR_2_YEARS_CURRENT_JOB
	--,BORR_2_FIRST_TIME_BUYER_IND
	,BORR_2_NAME
	--,BORR_2_RENTING_IND
	--,BORR_2_SELF_EMPL_IND
	,BORR_2_SSN
	,BORR_REQD_INVEST_TO_CLOSE
	,BORR_HSNG_EXP_ENDRS
	,BORR_HSNG_EXP_UW
	,BORR_PAID_CLOSING_COSTS
	,BUILDING_ON_OWN_LAND_IND
	,BNKRPTCY_CHPTR13_IND
	,BNKRPTCY_CHPTR7_IND
	--,CLOSNG_DT
	,COMBINED_LOAN_TO_VALUE_PCT
	--,COMMTY_LAND_TRUST_EIN
	--,COMM_PROPERTY_STATE_IND
	,APPLICATION_DATE
	,DATE_OF_PRIOR_SALE
	,DCSN_CD_ENDRS
	,DCSN_CD_UW
	,DEFAULT_EPISODE_EXISTS_IND
	--,DEPO_IS_PRESENT_IND
	,DISASTER_IND
	--,EFF_DATE_APRSL
	,EFF_DATE_APRSL_UPDATE
	,ENDRS_BYND_60_DAYS_CLOSE_IND
	,ESCROW_AMOUNT
	,FICO_DECISION_SCORE_UW
	,FICO_DECISION_SCORE_ENDRS
	,FLIPPING_CATEGORY_2_IND
	,RATIO_TOT_PMT_TO_TOT_INC_UW
	,RATIO_TOT_PMT_TO_TOT_INC_ENDRS
	,GIFT_LTR_2_SOURCE
	,HECM_COUNSEL_CERT_NO
	,HUD_REO_REPAIR_AMT
	,INSUR_APP_IN_TIME_IND
	,INVEST_2ND_RESID_IND
	,LAST_SERVICING_MRTG_XFER_DT
	,LOAN_OFFICER
	,LOAN_OFFICER_NMLS
	,MANDATORY_OBLIG_BORR_AMT
	,MANDATORY_OBLIG_LEND_AMT
	,MAN_UW_STRETCH_RATIO_IND
	,MAX_CLAIM_AMT
	,MAX_RATE
	,CURRENT_AT_ENDORSE_IND
	,NON_OCCUPYING_BORR_IND
	,ORGNTNG_MTGEE_NMLS_ID
	,ORIGINATION_FEE
	,PAYMENT_PLAN
	,PRICE_OF_PRIOR_SALE
	,PRIOR_SALE_WITHIN_LAST_3YR_IND
	--,PROP_CURR_OCCUPANCY_TYPE
	--,PROPERTY_REPAIRS
	--,CONST_COMPLT_YR_MO
	,QUALIFIED_MRTG_POINTS_AND_FEES
	--,REAL_ESTATE_ASSETS
	,REPAIR_COMPLETION_DATE
	--,REPAIR_RIDER_IN_FILE_IND
	,SALES_PRICE
	,SALE_PRICE_GTR_ACQ_COST_IND
	,SECONDARY_FINANCE_EXISTS_IND
	,SELLER_CNTRBTN_PCNT
	,SITE_TYPE
	,SPECIAL_PROGRAM
	,TEN_YR_RATE_LOCK_IND
	,TOT_ASSETS_ENDRS
	,TOT_ASSETS_UW
	,TOT_CLSNG_CSTS_ENDRS
	,TOT_CLSNG_CSTS_UW
	,TOT_FIXED_PYMT_ENDRS
	,TOT_FIXED_PYMT_UW
	,TOT_MNTHLY_MTG_PYMT_ENDRS
	,TOT_MNTHLY_MTG_PYMT_UW
	,TOTAL_REQUIRED_FUNDS_TO_CLOSE
	,UNDERWRITING_METHOD
	,YEAR_BUILT
	,FRCLSR_STRT_DT )
	--,RPR_ESCRW_AMT)
	select 
	(SELECT TOP 1 SELECTION_REQUEST_ID FROM SELECTION_REQUEST WHERE SELECTION_REQUEST_TYPE_ID = (SELECT SELECTION_REQUEST_TYPE_ID FROM SELECTION_REQUEST_TYPE_REF WHERE CODE = 'TEST_CASE'))
	,APRSL_CMPLTN_DT
	,CASE_NUMBER
	,SELECTION_ID
	,PREQUAL_DT
	,ADDTNL_10PCT_IPL_USAGE_AMT
	,ADDTNL_10PCT_IPL_USAGE_IND
	,ADP_CODE
	,ALLOW_CLSG_COST
	,AMORT_TYP_CD
	,APLCTN_MTHD
	,ARM_ADJ_PRD
	,1.5  --,ARM_INDX_EXPCTD_RT
	,ARM_INDX_IND
	,ARM_IND
	,ARM_MRGN_AMT
	,ARM_DT
	,COUNT_AUS
	--,AUS_SCORE_CODE
	,BSMT_CD
	,BNKRPTCY_CD
	,BNKRPTCY_DT
	--,BORR_NM
	,BORR_BRTH_DT
	,BORR_CNSL_TYP
	--,BORR_EMPLMNT_IND
	,BORR_GENDER
	--,BORR_HSNG_EXP
	,BORR_TYP
	,BUY_DWN_IND
	,CS_ESTAB_DT
	,CCT_REINS_DT
	,CS_TYP
	,CASHOUT_REFI_IND
	,CLAIM_TYPE
	,CLSNG_DT
	,CF_EQUIVICAL_ASSETS_IND
	,CF_EXPECTED_SSI_IND
	,CF_HECM_SUFFICIENT_IND
	,CF_IMPUTED_INCOME_IND
	,CF_NBS_INCOME_IND
	,CF_OT_INCOME_IND
	,CF_OTHER_INCOME_IND
	,CF_PROP_PMT_HIST_IND
	,CONDO_FEE_CURR_IND
	,CONDO_FEE_DELINQ_IND
	,CONST_CD
	,CONST_STS_CD
	--,PRC_EXCL_CLSNG_AMT
	--,PRC_INCL_CLSNG_AMT
	,CORP_ADVNC_AMT
	,CURR_DFLT_90DAY_IND
	--,DFLT_ASGNMNT_DT
	--,DFLT_CRTN_DT
	,CURR_DFLT_CYC_DT
	,CURR_DFLT_EPISODE_NBR
	--,CURR_DFLT_MM_CYC_DT
	,CURR_DFLT_RSN_CD
	,CURR_DFLT_STS_CD
	,CURR_DFLT_STS_DT
	--,CURR_DFLT_STS_IND
	,CURR_DFLT_STS_SUMMARY_CD
	--,DAYS_IN_DEFAULT
	--,DFLT_90DAY_IND
	--,DFLT_CYC_DT
	--,DFLT_EPISODE_NBR
	--,FT_IN_EPS_2MNTH_DELQ_DT
	--,DFLT_HIST_LOSSMIT_CD
	--,DFLT_MM_CYC_DT
	--,DFLT_RSN_CD
	--,DFLT_SRVCR
	--,DFLT_STS_CD
	--,DFLT_STS_DT
	--,DFLT_STS_SUMMARY_CD
	--,DFLT_TRNSCTN_DT
	,DPNDNT_CNT
	--,DERIVED_OPTN_USED_CD
	--,DFLT_HIST_FT_IN_EPS_3M_DELQ_DT
	,DIR_LENDING_BRANCH_IND
	,EARLY_CLAIM_IND
	,EARLY_DEFAULT_IND
	--,EFFECTIVE_FICO_SCORE
	--,END_CD
	,ENDRSMNT_DT
	,ENDRSMNT_RVW_PRSNNL_ID
	,ENERGY_EFF_MRTG
	,FCTRY_FBRCT
	,FEMA_FLOOD_AREA_IND
	,FHAC_ADDR_CHG
	--,FICO_SCORE
	,FNCNG_TYP
	,FRCLSR_IND
	--,FT_IN_EPS_2MNTH_DELQ_IND
	,FT_IN_EPS_3MNTH_DELQ_DT
	--,FT_IN_EPS_3MNTH_DELQ_IND
	--,FTE_2MNTH_DELQ_DT
	,GIFT_LTR_AMT
	,GIFT_LTR_2_AMT
	,GIFT_LTR_SRC
	,GIFT_LTR_TIN
	--,HARDCOPY_DOCS_IND
	,HECM_ASSETS
	,HECM_COUNSEL_DT
	,HECM_LIENS
	--,HECM_MNTHLY_INC
	,HECM_PRNCPL_LMT
	--,HLDR_MTGEE10_A43C
	,HLDR_MTGEE5_A43
	,HSNG_PGM_CD
	,INIT_DISBURSEMENT_LIMIT
	,INIT_FEE
	--,INIT_MIP_FACTOR
	,INSRNC_STATUS_CD
	,INT_RT
	--,LAST_CS_SCORE_DT
	,MISC_LNDR_INSRNC_IND
	,LE_COMPOUND_RATE
	,LE_EXPECTED_RATE
	,LE_PROJECTED_AMT
	,LESA_FUNDING_AMT
	,LESA_FUNDING_TYPE
	,LE_SETASIDE_AMT
	,LE_TALC_MONTHS
	--,MONTHLY_P_I
	,LOAN_NBR
	,LOAN_PRPS
	,LOAN_PRPS_FRWD_PYMT_IND
	,LOAN_PRPS_IMPRVMNT_IND
	,LOAN_PRPS_INCM_IND
	,LOAN_PRPS_INSRNC_IND
	,LOAN_PRPS_LEISURE_IND
	,LOAN_PRPS_MEDCL_IND
	,LOAN_PRPS_OTHR_IND
	,PROP_TYP
	,LOAN_PRPS_TAXES_IND
	,LOAN_PRPS_TEXT
	,LTV_CAT
	--,LTV_CAT_NEW
	--,LTV_CAT_OLD
	,RATIO_LOAN_TO_VL_NEW
	--,RATIO_LOAN_TO_VL_OLD
	,LOAN_TYPE
	,LOSSMIT_CD
	,MNDTRY_OBLGTNS_AMT
	--,MANDATORY_OBLIGS_AMT
	,MARRIED_TO_NBS_IND
	,CURR_MNTHLY_MIP
	,MISC_AUS_DCSN_CD
	,MISC_AUS_IND
	--,RANDOM_NUMBER
	,ME_DEBT_AMT
	,ME_OTHER_AMT
	,ME_RE_AMT
	,ME_TOTAL_AMT
	,MI_IMPUTED_AMT
	,MI_OTHER_AMT
	,MI_TOTAL_AMT
	,MNTHLY_SET_ASIDE
	,MORT_EXCLD_FNCD_MIP
	,MIP_FINANCED_IND
	--,NBR_MONTHS
	,NBS_FIRST_MIDDLE_LAST
	,NBRHD_PCT_OWNED
	,NBRHD_PRICE
	--,MAX_CLAIM_AMT_NEW
	,NOR_ISS_RPT_DT
	,NBR_BTHRMS
	,NBR_BDRM
	,NBR_RMS
	,NUM_LIVING_UNITS
	--,OCPNCY_STS
	,OCPNCY_STS_CD
	,OCPNCY_STS_DT
	--,MAX_CLAIM_AMT_OLD
	,OLDST_UNPD_DT
	,ORIG_MRTG_AMT
	,ORGNTNG_MTGEE5
	,ORGNTNG_MTGEE10_ID
	,TYP_ORGNTNG_MTGEE
	,OTHER_DEBT_CURR_IND
	,OTHER_DEBT_LATE_PMT_IND
	,PRE_RVW_DCSN
	,PRE_CLSNG_IND
	--,PREQUAL_OUTPUT
	,PREV_COMPLT_SBDVSN_IND
	,PRNCPL_RDCTN_AMT
	,PRIOR_SALE_RQRD_IND
	,PRCSNG_TYP
	,'1B8D99B7-02B3-4569-BD86-4D546A2BB3DF'
	,PROG_ID_F17
	,DT_ACQ
	,PROP_ADDR_ST
	,PRPRTY_APRSL_VL
	,PC_CONDO_FEE_AMT
	,PC_FLOOD_INS_AMT
	,PC_HAZ_INS_AMT
	,PC_OTHER_AMT
	,PC_RE_TAX_AMT
	,PC_SETASIDE_TOT_AMT
	,PC_TOTAL_AMT
	,PRPRTY_CNVRSN_TYP
	,PD_STRMLN_FLG
	--,PYMTS_BFR_FRST_MISSED_PYMT
	,RATIO_ORE_TEI
	--,RATIO_FIX_TEI
	,PTI_CAT
	--,RATIO_TMP_TEI
	,RE_DEBT_CURR_IND
	,RE_DEBT_LATE_PMT_IND
	,RE_TAX_CURR_IND
	,RE_TAX_DELINQ_IND
	,RFNC_CD
	--,RFNC_IND
	,RFNC_NEXT_CASE_NBR
	,RPR_SET_ASIDE
	--,RQRD_INVEST
	,RI_FAMILY_SIZE
	,RI_SHORTFALL_AMT
	,RI_STANDARD_AMT
	,RI_TOTAL_AMT
	,REVOLVE_DEBT_CURR_IND
	,REVOLVE_DEBT_LATE_PMT_IND
	,NBRHD_CD
	,RCV_SALE_DT
	,SCNDRY_FNC_SRC
	,SECONDARY_FINANCE_AMT
	,SELLER_CNTRBTN
	,SEND_MIC_IND
	,OLD_SRVCR_MTGEE
	--,SRVCR_MTGEE10_A43C
	,SRVCR_MTGEE5_A43
	--,SFPCS_MTGEE_ID
	,SNGL_DSBRSE_LMP_SUM_PMT_OPT
	,PCT_1_FMLY
	,SOA_CD
	,SPNSR_MTGEE10_ID
	--,SQNC_NBR
	,STRMNLN_REFI_TYPE
	--,STRT_STOP_EPS_IND
	,SBDVSN_SPOT_LOT
	--,TAX_INSUR_YR_1_PMTS
	,TAXES_INSRNC_FRST_YR_AMT
	--,TRV_SLCT_RSN_CD
	,TERM
	,TERM_TYP_CD
	,TOT_ANN_EFF_INCM
	--,TOT_ASSETS
	--,TOT_CLSNG_CSTS
	--,TOT_FIXED_PYMT
	,TOT_MNTHLY_EFF_INCM
	--,TOT_MNTHLY_MTG_PYMT
	,TOT_ACQ_COSTS
	,TRNSMSN_TYP
	,UFMIP_PD_AMT
	,UFMIP_PD_CASH
	,UFMIP_EARNED_CURR_MM
	,UFMIP_FACTOR
	,UNDERWRITER_ID
	,UNDRWRTING_MTGEE5
	,UNPD_BAL
	,VAL_PLUS_CLSNG
	,'SYS001'
	,getdate()
	,'SYS001'
	,getdate()
	,BLDG_TYP
	--,DCSN_CD
	,REO_100_DOWN_PMT_PROG_IND
	--,AFFORD_HOUS_PROV_EIN
	,APPRAISER_NAME
	--,ASSETS_AFTER_CLOSING
	--,ASSETS_AFTER_CLOSING_ENDRS
	,ASSETS_AFTER_CLOSING_UW
	,ASSUMED_LOAN_IND
	,RATIO_FIX_TEI_ENDRS
	,RATIO_FIX_TEI_UW
	,BACK_TO_WORK_IND
	,BNKRPTCY_ANY_IND
	,BORR_1_FIRST_TIME_BUYER_IND
	,BORR_NM
	,BORR_1_RENTING_IND
	,BORR_EMPLMNT_IND
	,BORR_1_SSN
	--,BORR_1_YEARS_CURRENT_JOB
	--,BORR_2_YEARS_CURRENT_JOB
	--,BORR_2_FIRST_TIME_BUYER_IND
	,BORR_2_NAME
	--,BORR_2_RENTING_IND
	--,BORR_2_SELF_EMPL_IND
	,BORR_2_SSN
	,BORR_REQD_INVEST_TO_CLOSE
	,BORR_HSNG_EXP_ENDRS
	,BORR_HSNG_EXP_UW
	,BORR_PAID_CLOSING_COSTS
	,BUILDING_ON_OWN_LAND_IND
	,BNKRPTCY_CHPTR13_IND
	,BNKRPTCY_CHPTR7_IND
	--,CLOSNG_DT
	,COMBINED_LOAN_TO_VALUE_PCT
	--,COMMTY_LAND_TRUST_EIN
	--,COMM_PROPERTY_STATE_IND
	,APPLICATION_DATE
	,DATE_OF_PRIOR_SALE
	,DCSN_CD_ENDRS
	,DCSN_CD_UW
	,DEFAULT_EPISODE_EXISTS_IND
	--,DEPO_IS_PRESENT_IND
	,DISASTER_IND
	--,EFF_DATE_APRSL
	,EFF_DATE_APRSL_UPDATE
	,ENDRS_BYND_60_DAYS_CLOSE_IND
	,ESCROW_AMOUNT
	,FICO_DECISION_SCORE_UW
	,FICO_DECISION_SCORE_ENDRS
	,FLIPPING_CATEGORY_2_IND
	,RATIO_TOT_PMT_TO_TOT_INC_UW
	,RATIO_TOT_PMT_TO_TOT_INC_ENDRS
	,GIFT_LTR_2_SOURCE
	,HECM_COUNSEL_CERT_NO
	,HUD_REO_REPAIR_AMT
	,INSUR_APP_IN_TIME_IND
	,INVEST_2ND_RESID_IND
	,LAST_SERVICING_MRTG_XFER_DT
	,LOAN_OFFICER
	,LOAN_OFFICER_NMLS
	,MANDATORY_OBLIG_BORR_AMT
	,MANDATORY_OBLIG_LEND_AMT
	,MAN_UW_STRETCH_RATIO_IND
	,MAX_CLAIM_AMT
	,MAX_RATE
	,CURRENT_AT_ENDORSE_IND
	,NON_OCCUPYING_BORR_IND
	,ORGNTNG_MTGEE_NMLS_ID
	,ORIGINATION_FEE
	,PAYMENT_PLAN
	,PRICE_OF_PRIOR_SALE
	,PRIOR_SALE_WITHIN_LAST_3YR_IND
	--,PROP_CURR_OCCUPANCY_TYPE
	--,PROPERTY_REPAIRS
	--,CONST_COMPLT_YR_MO
	,QUALIFIED_MRTG_POINTS_AND_FEES
	--,REAL_ESTATE_ASSETS
	,REPAIR_COMPLETION_DATE
	--,REPAIR_RIDER_IN_FILE_IND
	,SALES_PRICE
	,SALE_PRICE_GTR_ACQ_COST_IND
	,SECONDARY_FINANCE_EXISTS_IND
	,SELLER_CNTRBTN_PCNT
	,SITE_TYPE
	,SPECIAL_PROGRAM
	,TEN_YR_RATE_LOCK_IND
	,TOT_ASSETS_ENDRS
	,TOT_ASSETS_UW
	,TOT_CLSNG_CSTS_ENDRS
	,TOT_CLSNG_CSTS_UW
	,TOT_FIXED_PYMT_ENDRS
	,TOT_FIXED_PYMT_UW
	,TOT_MNTHLY_MTG_PYMT_ENDRS
	,TOT_MNTHLY_MTG_PYMT_UW
	,TOTAL_REQUIRED_FUNDS_TO_CLOSE
	,UNDERWRITING_METHOD
	,YEAR_BUILT
	,FRCLSR_STRT_DT
	--,RPR_ESCRW_AMT
	from lrsextdb..lrs_case_record
		where CASE_NUMBER = @CASE_NUMBER
						 
	insert into loan_selection
	(SELECTION_ID
	,SELECTION_REASON_ID
	,BATCH_ID
	,CASE_NUMBER
	--,RVW_LOCATION_ID
	,DISTRIBUTION_DT
	,MTGEE5
	,DUE_DATE
	--,PREF_RVW_LOCATION
	--,PRIMARY_SELECTION_REASON
	,RECEIVED_DT
	,RQST_DOCS_SOURCE_CD
	,REQUESTED_DT_TM
	,REVIEW_TYPE_ID
	,SELECTION_DT
	,LOAN_SELECTION_STATUS_ID
	,CREATED_BY
	,CREATED_TS)
	select
		SELECTION_ID
		,(SELECT SELECTION_REASON_ID FROM SELECTION_REASON WHERE CODE = 'TEST_CASE')
		,BATCH_ID
		,CASE_NUMBER
		--,RVW_LOCATION_ID
		,DISTRIBUTION_DT
		,MTGEE5
		,DUE_DATE
		--,PREF_RVW_LOCATION
		--,PRIMARY_SELECTION_REASON
		,RECEIVED_DT
		,RQST_DOCS_SOURCE_CD
		,REQUESTED_DT_TM
		,case when REVIEW_TYPE = 'Operations' then '90B0553D-1F12-442E-8858-B3BCF8880EF3'
			when REVIEW_TYPE = 'Servicing' then '81FA4DBC-7F9B-41BF-ABC4-B07B70951217'
			when REVIEW_TYPE = 'Underwriting' then '0EFDD262-B47C-4D04-9968-22C04FEE0FAD'
			end
		,SELECTION_DT
		,(SELECT LOAN_SELECTION_STATUS_ID FROM LOAN_SELECTION_STATUS_REF LSS WHERE LSS.CODE = STATUS)
		,'SYS001' 
		,getdate()
		from lrsextdb..lrs_case_record
		where CASE_NUMBER = @CASE_NUMBER
		]]>
        </sql>
    </changeSet>    
	<changeSet context="TEST"  author="jordanchavez@kpmg.com" id="HUDLRS_2134_0004" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
        <sql>
		<![CDATA[
ALTER TABLE DICT_METADATA_FIELD DROP CONSTRAINT METAFIELDTOMETAENTITY
GO


UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'SELECTION_REASON' WHERE DB_VIEW_OR_TABLE = 'SELECTION_PARAMETERS'
UPDATE F SET F.DB_COLUMN = 'SELECTION_REASON_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REASON') AND (F.DB_COLUMN = 'SLCTN_REASON_ID')
UPDATE F SET F.DB_COLUMN = 'DESCRIPTION' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REASON') AND (F.DB_COLUMN = 'SELECTION_REASON_NAME')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REASON')
UPDATE F SET F.DB_COLUMN = 'SELECTION_REASON_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION') AND (F.DB_COLUMN = 'SLCTN_REASON_ID')
UPDATE F SET F.DB_COLUMN = 'SELECTION_REASON_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING') AND (F.DB_COLUMN = 'SLCTN_REASON_ID')
UPDATE F SET F.DB_COLUMN = 'SELECTION_REASON_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LEVEL_ITERATION_TIMEFRAME') AND (F.DB_COLUMN = 'SLCTN_REASON_ID')
UPDATE F SET F.DB_COLUMN = 'SELECTION_REASON_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LOCATION_REASON') AND (F.DB_COLUMN = 'SLCTN_REASON_ID')
UPDATE F SET F.DB_COLUMN = 'SELECTION_REASON_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'QATREE_QSTN_RULES') AND (F.DB_COLUMN = 'SLCTN_REASON_ID')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('SELECTION_SUB_REASON_REF', 'SELECTION_SUB_REASON_REF', 'SELECTION_SUB_REASON_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_SUB_REASON_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_SUB_REASON_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_SUB_REASON_REF')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'SELECTION_SUB_REASON' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'SELECTION_SUB_REASON_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('FILE_DELIVERY_LOCATION_REF', 'FILE_DELIVERY_LOCATION_REF', 'FILE_DELIVERY_LOCATION_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'FILE_DELIVERY_LOCATION_ID', 'FILE_DELIVERY_LOCATION_ID', 'FILE_DELIVERY_LOCATION_ID', 'FILE_DELIVERY_LOCATION_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FILE_DELIVERY_LOCATION_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FILE_DELIVERY_LOCATION_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'FILE_DELIVERY_LOCATION_REF')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LOCATION') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'PREFERRED_REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION') AND (F.DB_COLUMN = 'PREF_RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'LOCATION_ASSIGNMENT_TYPE') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LOCATION_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LOCATION_REASON') AND (F.DB_COLUMN = 'RVW_LOCATION_ID')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('SELECTION_REQUEST_TYPE_REF', 'SELECTION_REQUEST_TYPE_REF', 'SELECTION_REQUEST_TYPE_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_TYPE_ID', 'SELECTION_REQUEST_TYPE_ID', 'SELECTION_REQUEST_TYPE_ID', 'SELECTION_REQUEST_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST_TYPE_REF')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('SELECTION_REQUEST', 'SELECTION_REQUEST', 'SELECTION_REQUEST', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_TYPE_ID', 'SELECTION_REQUEST_TYPE_ID', 'SELECTION_REQUEST_TYPE_ID', 'SELECTION_REQUEST_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'SELECTION_REQUEST')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LENDER_MONITORING_SELECTION_REQUEST', 'LENDER_MONITORING_SELECTION_REQUEST', 'LENDER_MONITORING_SELECTION_REQUEST', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'LENDER_ID', 'LENDER_ID', 'LENDER_ID', 'LENDER_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'REVIEW_LOCATION_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_TYPE_ID', 'REVIEW_TYPE_ID', 'REVIEW_TYPE_ID', 'REVIEW_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'FILE_DELIVERY_LOCATION_ID', 'FILE_DELIVERY_LOCATION_ID', 'FILE_DELIVERY_LOCATION_ID', 'FILE_DELIVERY_LOCATION_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SITE_VISIT_DT', 'SITE_VISIT_DT', 'SITE_VISIT_DT', 'SITE_VISIT_DT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'PRODUCT_TYPE_ID', 'PRODUCT_TYPE_ID', 'PRODUCT_TYPE_ID', 'PRODUCT_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CASE_COUNT', 'CASE_COUNT', 'CASE_COUNT', 'CASE_COUNT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'START_DT', 'START_DT', 'START_DT', 'START_DT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'END_DT', 'END_DT', 'END_DT', 'END_DT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LENDER_SELF_REPORT_SELECTION_REQUEST', 'LENDER_SELF_REPORT_SELECTION_REQUEST', 'LENDER_SELF_REPORT_SELECTION_REQUEST', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'FRAUD_DETECTED', 'FRAUD_DETECTED', 'FRAUD_DETECTED', 'FRAUD_DETECTED', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'FINDINGS_DESCRIPTION', 'FINDINGS_DESCRIPTION', 'FINDINGS_DESCRIPTION', 'FINDINGS_DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CORRECTIVE_ACTIONS_DESCRIPTION', 'CORRECTIVE_ACTIONS_DESCRIPTION', 'CORRECTIVE_ACTIONS_DESCRIPTION', 'CORRECTIVE_ACTIONS_DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'LOAN_COVERED_UNDER_SETTLEMTN_WITH_HUD', 'LOAN_COVERED_UNDER_SETTLEMTN_WITH_HUD', 'LOAN_COVERED_UNDER_SETTLEMTN_WITH_HUD', 'LOAN_COVERED_UNDER_SETTLEMTN_WITH_HUD', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT', 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT', 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DEFECT_ID', 'DEFECT_ID', 'DEFECT_ID', 'DEFECT_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF', 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF', 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DEFECT_TYPE_ID', 'DEFECT_TYPE_ID', 'DEFECT_TYPE_ID', 'DEFECT_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF', 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF', 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'FRAUD_TYPE_ID', 'FRAUD_TYPE_ID', 'FRAUD_TYPE_ID', 'FRAUD_TYPE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF', 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF', 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'FRAUD_PARTICIPANT_ID', 'FRAUD_PARTICIPANT_ID', 'FRAUD_PARTICIPANT_ID', 'FRAUD_PARTICIPANT_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF')
UPDATE F SET F.DB_COLUMN = 'UNIVERSE_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_REF') AND (F.DB_COLUMN = 'UNIVERSE_REF_ID')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('UNIVERSE_SELECTION_REQUEST', 'UNIVERSE_SELECTION_REQUEST', 'UNIVERSE_SELECTION_REQUEST', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UNIVERSE_ID', 'UNIVERSE_ID', 'UNIVERSE_ID', 'UNIVERSE_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'START_DT', 'START_DT', 'START_DT', 'START_DT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'END_DT', 'END_DT', 'END_DT', 'END_DT', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'JBPM_PROCESS_ID', 'JBPM_PROCESS_ID', 'JBPM_PROCESS_ID', 'JBPM_PROCESS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'AUTOMATIC_IND', 'AUTOMATIC_IND', 'AUTOMATIC_IND', 'AUTOMATIC_IND', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'COMPLETED_TS', 'COMPLETED_TS', 'COMPLETED_TS', 'COMPLETED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'UNIVERSE_SELECTION_REQUEST')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_FRAUD_TYPE';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_FRAUD_TYPE'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_FRAUD_PRTCPNT';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_FRAUD_PRTCPNT'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_DEFECT';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_DEFECT'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_DEFECT_TYPE';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_DEFECT_TYPE'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_LENDER_MON';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_LENDER_MON'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_LENDER_SELF';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_LENDER_SELF'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'SELECT_REQUEST_MANUAL_FHA';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'SELECT_REQUEST_MANUAL_FHA'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'LENDER_MONITORING_RQST_MODEL';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'LENDER_MONITORING_RQST_MODEL'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'JOB_ID' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_CASE_SUMMARY')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_CASE_SUMMARY')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'JOB';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'JOB'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'JOB_TYPE_REF';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'JOB_TYPE_REF'
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('BATCH_STATUS_REF', 'BATCH_STATUS_REF', 'BATCH_STATUS_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'BATCH_STATUS_ID', 'BATCH_STATUS_ID', 'BATCH_STATUS_ID', 'BATCH_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'BATCH_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'BATCH_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'BATCH_STATUS_REF')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'BATCH' WHERE DB_VIEW_OR_TABLE = 'RVW_BATCH'
UPDATE F SET F.DB_COLUMN = 'REQUEST_OPERATIONAL_DOCUMENTS_IND' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'BATCH') AND (F.DB_COLUMN = 'REQUEST_OPS_DOCS_IND')
UPDATE F SET F.DB_COLUMN = 'OPERATIONAL_REVIEW_GUIDANCE' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'BATCH') AND (F.DB_COLUMN = 'OPERATIONAL_RVW_GUIDANCE_TXT')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'SELECTION_REQUEST_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'BATCH')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'STATUS' AND E.DB_VIEW_OR_TABLE = 'BATCH')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'BATCH_STATUS_ID', 'BATCH_STATUS_ID', 'BATCH_STATUS_ID', 'BATCH_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'BATCH')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('PERSONNEL_STATUS_REF', 'PERSONNEL_STATUS_REF', 'PERSONNEL_STATUS_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'PERSONNEL_STATUS_ID', 'PERSONNEL_STATUS_ID', 'PERSONNEL_STATUS_ID', 'PERSONNEL_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'PERSONNEL_STATUS_ID', 'PERSONNEL_STATUS_ID', 'PERSONNEL_STATUS_ID', 'PERSONNEL_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'STATUS_CODE' AND E.DB_VIEW_OR_TABLE = 'PERSONNEL')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('LOAN_SELECTION_STATUS_REF', 'LOAN_SELECTION_STATUS_REF', 'LOAN_SELECTION_STATUS_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'LOAN_SELECTION_STATUS_ID', 'LOAN_SELECTION_STATUS_ID', 'LOAN_SELECTION_STATUS_ID', 'LOAN_SELECTION_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'LOAN_SELECTION_STATUS_ID', 'LOAN_SELECTION_STATUS_ID', 'LOAN_SELECTION_STATUS_ID', 'LOAN_SELECTION_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'STATUS' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('REVIEW_STATUS_REF', 'REVIEW_STATUS_REF', 'REVIEW_STATUS_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_STATUS_ID', 'REVIEW_STATUS_ID', 'REVIEW_STATUS_ID', 'REVIEW_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_STATUS_ID', 'REVIEW_STATUS_ID', 'REVIEW_STATUS_ID', 'REVIEW_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'STATUS' AND E.DB_VIEW_OR_TABLE = 'REVIEW')
INSERT INTO DICT_METADATA_ENTITY(ENTITY_NAME, DB_VIEW_OR_TABLE, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) VALUES ('REVIEW_LEVEL_STATUS_REF', 'REVIEW_LEVEL_STATUS_REF', 'REVIEW_LEVEL_STATUS_REF', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_LEVEL_STATUS_ID', 'REVIEW_LEVEL_STATUS_ID', 'REVIEW_LEVEL_STATUS_ID', 'REVIEW_LEVEL_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CODE', 'CODE', 'CODE', 'CODE', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'DESCRIPTION', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_STATUS_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'REVIEW_LEVEL_STATUS_ID', 'REVIEW_LEVEL_STATUS_ID', 'REVIEW_LEVEL_STATUS_ID', 'REVIEW_LEVEL_STATUS_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'STATUS' AND E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'RATING_REF' WHERE DB_VIEW_OR_TABLE = 'RATING'
UPDATE F SET F.DB_COLUMN = 'CODE' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RATING_REF') AND (F.DB_COLUMN = 'RATING_CD')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'RATING_ID', 'RATING_ID', 'RATING_ID', 'RATING_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'RATING_REF')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'SUMMARY_RATING_ID', 'SUMMARY_RATING_ID', 'SUMMARY_RATING_ID', 'SUMMARY_RATING_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'SUMMARY_RATING_CD' AND E.DB_VIEW_OR_TABLE = 'REVIEW')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'RATING_ID', 'RATING_ID', 'RATING_ID', 'RATING_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'RATING_CD' AND E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'RATING_ID', 'RATING_ID', 'RATING_ID', 'RATING_ID', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_FINDING')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'RATING_CD' AND E.DB_VIEW_OR_TABLE = 'RVW_LVL_FINDING')
UPDATE F SET F.DB_COLUMN = 'PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL') AND (F.DB_COLUMN = 'PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'REPORTS_TO_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL') AND (F.DB_COLUMN = 'REPORTS_TO_PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'VETTING_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL') AND (F.DB_COLUMN = 'VETTING_PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'OWNER_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'BATCH') AND (F.DB_COLUMN = 'OWNER_PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'ORIGINAL_OWNER_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'BATCH') AND (F.DB_COLUMN = 'ORIG_OWNR_PRSNNL_ID')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'BATCH_PERSONNEL' WHERE DB_VIEW_OR_TABLE = 'RVW_BATCH_PRSNNL'
UPDATE F SET F.DB_COLUMN = 'PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'BATCH_PERSONNEL') AND (F.DB_COLUMN = 'PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'NOTE') AND (F.DB_COLUMN = 'PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL_ASSIGNMENT_TYPE') AND (F.DB_COLUMN = 'PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'PERSONNEL_UNAVAILABILITY') AND (F.DB_COLUMN = 'PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'ORIGINAL_REVIEWER_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW') AND (F.DB_COLUMN = 'ORIG_RVWR_PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEWER_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL') AND (F.DB_COLUMN = 'RVWR_PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'ORIGINAL_REVIEWER_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL') AND (F.DB_COLUMN = 'ORIG_RVWR_PRSNNL_ID')
UPDATE F SET F.DB_COLUMN = 'OWNER_PERSONNEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LOCATION') AND (F.DB_COLUMN = 'OWNER_PRSNNL_ID')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_TYPE_REF' WHERE DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_REF'
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_TYPE_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_TYPE_REF') AND (F.DB_COLUMN = 'REVIEW_LEVEL_ID')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'DF_REVIEW_LEVEL_TYPE_REF_REVIEW_LEVEL_TYPE_ID' WHERE DB_VIEW_OR_TABLE = 'DF_REVIEW_LEVEL_REF_REVIEW_LEVEL_ID'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'REVIEW_LEVEL_ID' AND E.DB_VIEW_OR_TABLE = 'REVIEW')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_TYPE_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL') AND (F.DB_COLUMN = 'REVIEW_LEVEL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_TYPE_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LEVEL_ITERATION_TIMEFRAME') AND (F.DB_COLUMN = 'REVIEW_LEVEL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RQST_FROM_LENDER') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_CASE_SUMMARY') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_DEFECT') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_FINDING') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_INDEM') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_QSTN_ANSWERS') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'RVW_LVL_RFRRL') AND (F.DB_COLUMN = 'REVIEW_LVL_ID')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE E.DB_VIEW_OR_TABLE = 'lender_lookup';DELETE DICT_METADATA_ENTITY WHERE DB_VIEW_OR_TABLE = 'lender_lookup'
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'DEFECT_CD' AND E.DB_VIEW_OR_TABLE = 'QATREE')
UPDATE F SET F.DB_COLUMN = 'QATREE_OUTCOME_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME') AND (F.DB_COLUMN = 'QA_OUTCM_ID')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'DEFECT_CD' AND E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME')
UPDATE F SET F.DB_COLUMN = 'QATREE_OUTCOME_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'QATREE_QUESTION') AND (F.DB_COLUMN = 'QA_OUTCM_ID')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_CAUSE' WHERE DB_VIEW_OR_TABLE = 'QATREE_OUTCM_CAUSES'
UPDATE F SET F.DB_COLUMN = 'QATREE_OUTCOME_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_CAUSE') AND (F.DB_COLUMN = 'QA_OUTCM_ID')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'DEFECT_CAUSE_CD' AND E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_CAUSE')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_SEVERITY' WHERE DB_VIEW_OR_TABLE = 'QATREE_OUTCM_SEVERITY'
UPDATE F SET F.DB_COLUMN = 'QATREE_OUTCOME_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_SEVERITY') AND (F.DB_COLUMN = 'QA_OUTCM_ID')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'SEVERITY_TIER_CD' AND E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_SEVERITY')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_SOURCE' WHERE DB_VIEW_OR_TABLE = 'QATREE_OUTCM_SOURCES'
UPDATE F SET F.DB_COLUMN = 'QATREE_OUTCOME_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_SOURCE') AND (F.DB_COLUMN = 'QA_OUTCM_ID')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'DFCT_SOURCE_CD' AND E.DB_VIEW_OR_TABLE = 'QATREE_OUTCOME_DEFECT_SOURCE')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_ITERATION_TIMEFRAME' WHERE DB_VIEW_OR_TABLE = 'RVW_LEVEL_ITERATION_TIMEFRAME'
UPDATE F SET F.DB_COLUMN = 'REVIEW_LEVEL_ITERATION_TIMEFRAME_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_ITERATION_TIMEFRAME') AND (F.DB_COLUMN = 'RVW_LVL_ITERATION_TIMEFRAME_ID')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'CREATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_ITERATION_TIMEFRAME')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'CREATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_ITERATION_TIMEFRAME')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'UPDATED_BY', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_ITERATION_TIMEFRAME')
INSERT INTO DICT_METADATA_FIELD(ENTITY_NAME, DB_COLUMN, FIELD_NAME, DISPLAY_NAME, DESCRIPTION, CREATED_BY, UPDATED_BY, CREATED_TS, UPDATED_TS) SELECT E.ENTITY_NAME, 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'UPDATED_TS', 'jchav', 'jchav', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM DICT_METADATA_ENTITY E WHERE (E.DB_VIEW_OR_TABLE = 'REVIEW_LEVEL_ITERATION_TIMEFRAME')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'UNIVERSE_REF_ID' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_CASE_SUMMARY')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'MODEL_SCORE' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'MODEL_ID' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION_PENDING')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'SELECTION_METHOD' AND E.DB_VIEW_OR_TABLE = 'LOAN_SELECTION')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'SCORE_CALCULATED_DT' AND E.DB_VIEW_OR_TABLE = 'MODEL_SCORE')
DELETE F FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE  (F.DB_COLUMN = 'UNIVERSE_ID' AND E.DB_VIEW_OR_TABLE = 'MODEL_SCORE')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'SCORING_FACTOR' WHERE DB_VIEW_OR_TABLE = 'SCORING_FACTORS'
UPDATE F SET F.DB_COLUMN = 'SCORING_FACTOR_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'SCORING_FACTOR') AND (F.DB_COLUMN = 'FACTOR_ID')
UPDATE DICT_METADATA_ENTITY SET DB_VIEW_OR_TABLE = 'SCORING_MODEL_FACTOR' WHERE DB_VIEW_OR_TABLE = 'SCORING_MODEL_FACTORS'
UPDATE F SET F.DB_COLUMN = 'SCORING_FACTOR_ID' FROM DICT_METADATA_FIELD F INNER JOIN DICT_METADATA_ENTITY E ON (E.ENTITY_NAME = F.ENTITY_NAME) WHERE (E.DB_VIEW_OR_TABLE = 'SCORING_MODEL_FACTOR') AND (F.DB_COLUMN = 'FACTOR_ID')
		]]>
        </sql>
    </changeSet>	
</databaseChangeLog>
