<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
	<changeSet context="All" author="jordanchavez" id="HUDLRS_2229_0001" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
		<sql>
			<![CDATA[
UPDATE B SET B.MTGEE5 = (SELECT TOP 1 MTGEE5 FROM LOAN_SELECTION LS WHERE (LS.BATCH_ID = B.BATCH_ID)) FROM BATCH B WHERE (B.MTGEE5 IS NULL) 
UPDATE B SET B.MTGEE5 = '00000' FROM BATCH B WHERE (B.MTGEE5 IS NULL) 
UPDATE B SET B.OPERATIONAL_REVIEW_IND = 'N' FROM BATCH B WHERE (B.OPERATIONAL_REVIEW_IND IS NULL)
GO
ALTER TABLE BATCH ALTER COLUMN MTGEE5 CHAR(5) NOT NULL
ALTER TABLE BATCH ALTER COLUMN OPERATIONAL_REVIEW_IND CHAR(1) NOT NULL
GO

ALTER TABLE REVIEW_PROCESS_EXCEPTION_TYPE_REF ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_TYPE_DF_DEFAULT_REVIEW_PROCESS_EXCEPTION_TYPE_ID DEFAULT NEWID() FOR REVIEW_PROCESS_EXCEPTION_TYPE_ID
GO
ALTER TABLE REVIEW_PROCESS_EXCEPTION_TYPE_REF ALTER COLUMN CODE VARCHAR(50) NOT NULL
GO
UPDATE REVIEW_PROCESS_EXCEPTION_TYPE_REF SET CODE = 'LOAN_SELECTION_DISTRIBUTION', DESCRIPTION = 'Loan Selection Distribution' WHERE CODE = 'DISTRIBUTION_OVERFLOW'
UPDATE REVIEW_PROCESS_EXCEPTION_TYPE_REF SET CODE = 'REVIEW_LEVEL_ASSIGNMENT', DESCRIPTION = 'Review Assignment' WHERE CODE = 'ASSIGNMENT'
UPDATE REVIEW_PROCESS_EXCEPTION_TYPE_REF SET CODE = 'BATCH_ASSIGNMENT', DESCRIPTION = 'Batch Assignment' WHERE CODE = 'DISTRIBUTION_BATCH_INFO'
UPDATE REVIEW_PROCESS_EXCEPTION_TYPE_REF SET CODE = 'BINDER_REQUEST_PAST_DUE', DESCRIPTION = 'Binder Request Past Due' WHERE CODE = 'REQUEST_PAST_DUE'
UPDATE REVIEW_PROCESS_EXCEPTION_TYPE_REF SET CODE = 'BINDER_REQUEST_ERROR', DESCRIPTION = 'Binder Request Error' WHERE CODE = 'REQUEST_ERROR'
GO
INSERT INTO REVIEW_PROCESS_EXCEPTION_TYPE_REF(CODE, DESCRIPTION) VALUES ('BATCH_DISTRIBUTION', 'Batch Distribution')
GO
EXEC SP_RENAME 'REVIEW_LEVEL_CANCELLATION_REASON_REF', 'CANCELLATION_REASON_REF'
EXEC SP_RENAME 'REVIEW_LEVEL_CANCELLATION_REASON_REF_PK', 'CANCELLATION_REASON_REF_PK'
EXEC SP_RENAME 'DF_REVIEW_LEVEL_CANCELLATION_REASON_REF_CANCELLATION_REASON_ID', 'CANCELLATION_REASON_REF_DF_CANCELLATION_REASON_ID'
GO
ALTER TABLE REVIEW_LEVEL DROP CONSTRAINT REVIEW_LEVEL_FK_CANCELLATION_REASON_ID
ALTER TABLE REVIEW_LEVEL DROP COLUMN CANCELLATION_REASON_ID
GO
ALTER TABLE BATCH_STATUS_REF ADD CONSTRAINT BATCH_STATUS_REF_DF_BATCH_STATUS_ID DEFAULT NEWID() FOR BATCH_STATUS_ID
GO
UPDATE BATCH_STATUS_REF SET CODE = 'DISTRIBUTED', DESCRIPTION = 'Distributed' WHERE CODE = 'AWAITING_ASSIGNMENT'
INSERT INTO BATCH_STATUS_REF(CODE, DESCRIPTION) VALUES ('SELECTED', 'Selected')
DELETE FROM BATCH_STATUS_REF WHERE CODE = 'PENDING_SELECTION'
GO
ALTER TABLE LOAN_SELECTION_PENDING ADD QC_REVIEW_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION_PENDING ADD CONSTRAINT LOAN_SELECTION_PENDING_FK_QC_REVIEW_ID FOREIGN KEY(QC_REVIEW_ID) REFERENCES REVIEW(REVIEW_ID)
ALTER TABLE LOAN_SELECTION ADD QC_REVIEW_ID UNIQUEIDENTIFIER NULL
ALTER TABLE LOAN_SELECTION ADD CONSTRAINT LOAN_SELECTION_FK_QC_REVIEW_ID FOREIGN KEY(QC_REVIEW_ID) REFERENCES REVIEW(REVIEW_ID)
GO
ALTER TABLE REVIEW_PROCESS_EXCEPTION DROP COLUMN CASE_NUMBER
GO
DROP TABLE RVW_LVL_FINDING_AUD
DROP TABLE RVW_LVL_DEFECT_AUD
DROP TABLE REVIEW_REFERRAL_AUD
DROP TABLE LENDE_PARMS_FINDINGS
DROP TABLE DELIV_PARMS_BINDER
DROP TABLE DELIV_PARMS_ITERATION
DROP TABLE DELIV_PARMS_REQUEST
DROP TABLE REVIEW_LEVEL_ADMIN
DROP TABLE RVW_HISTORY
DROP TABLE RVW_DEFECT
GO
ALTER TABLE RVW_LVL_FINDING_QUESTION DROP COLUMN QATREE_ID
GO
EXEC SP_RENAME 'FINDING_QUESTION_TO_FINDING_FK', 'RVW_LVL_FINDING_QUESTION_FK_FINDING_ID'
EXEC SP_RENAME 'FINDING_QUESTION_TO_QUESTION_FK', 'RVW_LVL_FINDING_QUESTION_FK_QUESTION_ID'
EXEC SP_RENAME 'RVW_LVL_QSTN_ANSWERS', 'ANSWER'
EXEC SP_RENAME 'RVW_LVL_QSTN_ANSWERS_PK', 'ANSWER_PK'
EXEC SP_RENAME 'DF_RVW_LVL_QSTN_ANSWERS_ANSWER_ID', 'ANSWER_DF_ANSWER_ID'
EXEC SP_RENAME 'RVW_LVL_QSTN_ANSWERS_FK_QUESTION_ID', 'ANSWER_FK_QUESTION_ID'
EXEC SP_RENAME 'RVW_LVL_QSTN_ANSWERS_FK_REVIEW_LEVEL_ID', 'ANSWER_FK_REVIEW_LEVEL_ID'
GO
ALTER TABLE ANSWER DROP CONSTRAINT ANSWERS_TO_QATREE_FK
ALTER TABLE ANSWER DROP COLUMN QATREE_ID
GO
EXEC SP_RENAME 'RQST_FROM_LENDER_FK_REVIEW_LEVEL_ID', 'LENDER_REQUEST_FK_REVIEW_LEVEL_ID'
GO
EXEC SP_RENAME 'RVW_LVL_INDEM_FK_REVIEW_LEVEL_ID', 'INDEMNIFICATION_FK_REVIEW_LEVEL_ID'
GO
UPDATE REVIEW_PROCESS_EXCEPTION_TYPE_REF SET CODE = 'VETTING_ACKNOWOLEDGEMENT', DESCRIPTION = 'Vetting Acknowledgement' WHERE CODE = 'VETTING_CONFIRMATION'
GO
ALTER TABLE REVIEW_PROCESS_EXCEPTION ADD REVIEW_LEVEL_ID UNIQUEIDENTIFIER NULL
ALTER TABLE REVIEW_PROCESS_EXCEPTION ADD CONSTRAINT REVIEW_PROCESS_EXCEPTION_FK_REVIEW_LEVEL_ID FOREIGN KEY(REVIEW_LEVEL_ID) REFERENCES REVIEW_LEVEL(REVIEW_LEVEL_ID)
ALTER TABLE REVIEW_PROCESS_EXCEPTION DROP CONSTRAINT EXCEPTION_FK_REVIEW_ID
ALTER TABLE REVIEW_PROCESS_EXCEPTION DROP COLUMN REVIEW_ID
GO
ALTER TABLE REVIEW ADD MTGEE5 VARCHAR(5) NULL
GO
UPDATE R SET R.MTGEE5 = LS.MTGEE5 FROM REVIEW R INNER JOIN LOAN_SELECTION LS ON (LS.SELECTION_ID = R.SELECTION_ID)
GO

ALTER TABLE BATCH ADD REVIEW_TYPE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_REVIEW_TYPE_ID FOREIGN KEY(REVIEW_TYPE_ID) REFERENCES REVIEW_TYPE_REF(REVIEW_TYPE_ID)
GO
UPDATE B SET B.REVIEW_TYPE_ID = RQ.REVIEW_TYPE_ID
FROM BATCH B
INNER JOIN MANUAL_SELECTION_REQUEST RQ ON (RQ.SELECTION_REQUEST_ID = B.SELECTION_REQUEST_ID)
GO
UPDATE B SET B.REVIEW_TYPE_ID = RQ.REVIEW_TYPE_ID
FROM BATCH B
INNER JOIN LENDER_MONITORING_SELECTION_REQUEST RQ ON (RQ.SELECTION_REQUEST_ID = B.SELECTION_REQUEST_ID)
GO
UPDATE B SET B.REVIEW_TYPE_ID = (SELECT RT.REVIEW_TYPE_ID FROM REVIEW_TYPE_REF RT WHERE RT.REVIEW_TYPE_CD = 'U')
FROM BATCH B
INNER JOIN LENDER_SELF_REPORT_SELECTION_REQUEST RRQ ON (RRQ.SELECTION_REQUEST_ID = B.SELECTION_REQUEST_ID)
GO
ALTER TABLE BATCH ALTER COLUMN REVIEW_TYPE_ID UNIQUEIDENTIFIER NOT NULL
GO

ALTER TABLE BATCH ADD REVIEW_LEVEL_TYPE_ID UNIQUEIDENTIFIER NULL
ALTER TABLE BATCH ADD CONSTRAINT BATCH_FK_REVIEW_LEVEL_TYPE_ID  FOREIGN KEY(REVIEW_LEVEL_TYPE_ID) REFERENCES REVIEW_LEVEL_TYPE_REF(REVIEW_LEVEL_TYPE_ID)
ALTER TABLE BATCH ADD ITERATION_NUMBER SMALLINT NULL
GO
UPDATE B SET
	B.REVIEW_LEVEL_TYPE_ID = RL.REVIEW_LEVEL_TYPE_ID,
	B.ITERATION_NUMBER = RL.ITERATION_NUMBER
FROM BATCH B
INNER JOIN REVIEW R ON (R.BATCH_ID = B.BATCH_ID)
INNER JOIN REVIEW_TYPE_REF RT ON (RT.REVIEW_TYPE_ID = R.REVIEW_TYPE_ID)
INNER JOIN REVIEW_LEVEL RL ON (RL.REVIEW_ID = R.REVIEW_ID)
WHERE
	(RT.REVIEW_TYPE_CD <> 'O') AND
	(RL.CREATED_TS = (SELECT MIN(CREATED_TS) FROM REVIEW_LEVEL RLSUB WHERE (RLSUB.REVIEW_ID = R.REVIEW_ID)))
GO
UPDATE BATCH SET
	REVIEW_LEVEL_TYPE_ID = (SELECT REVIEW_LEVEL_TYPE_ID FROM REVIEW_LEVEL_TYPE_REF WHERE REVIEW_LEVEL_CD = 'INIT'),
	ITERATION_NUMBER = 1
WHERE (REVIEW_LEVEL_TYPE_ID IS NULL)
GO
ALTER TABLE BATCH ALTER COLUMN REVIEW_LEVEL_TYPE_ID UNIQUEIDENTIFIER NOT NULL
ALTER TABLE BATCH ALTER COLUMN ITERATION_NUMBER SMALLINT NOT NULL
GO
INSERT INTO BATCH_STATUS_REF(CODE, DESCRIPTION) VALUES ('ASSIGNED', 'ASSIGNED');
INSERT INTO BATCH_STATUS_REF(CODE, DESCRIPTION) VALUES ('REQUESTED', 'REQUESTED');
GO
ALTER TABLE LOAN_SELECTION_PENDING DROP CONSTRAINT LOAN_SELECTION_PENDING_FK_SELECTION_SUB_REASON_ID
ALTER TABLE LOAN_SELECTION_PENDING DROP COLUMN SELECTION_SUB_REASON_ID
GO
ALTER TABLE BATCH ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE BINDER_REQUEST ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE EMAIL ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE EMAIL_TEMPLATE_VERSION ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE JOB_TYPE_REF ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE MANUAL_SELECTION_REQUEST ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE SELECTION_REQUEST ALTER COLUMN UPDATED_BY CHAR(6) NULL
ALTER TABLE UNIVERSE_SELECTION_REQUEST ALTER COLUMN UPDATED_BY CHAR(6) NULL
GO
ALTER TABLE BATCH ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE BINDER_REQUEST ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE EMAIL ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE EMAIL_TEMPLATE_VERSION ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE JOB_TYPE_REF ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE LENDER_MONITORING_SELECTION_REQUEST ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_DEFECT_TYPE_REF ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_PARTICIPANT_REF ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE LENDER_SELF_REPORT_SELECTION_REQUEST_FRAUD_TYPE_REF ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE MANUAL_SELECTION_REQUEST ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE REVIEW_LEVEL_ITERATION_TIMEFRAME ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE SELECTION_REQUEST ALTER COLUMN UPDATED_TS DATETIME NULL
ALTER TABLE UNIVERSE_SELECTION_REQUEST ALTER COLUMN UPDATED_TS DATETIME NULL
GO
			]]>
		</sql>
	</changeSet>
	<changeSet context="All" author="jordanchavez" id="HUDLRS_2229_0002" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
		<sql>
			<![CDATA[
ALTER TRIGGER [dbo].[tI_AUDIT_REVIEW_LEVEL] ON [dbo].[REVIEW_LEVEL] FOR insert AS BEGIN
	insert into AUDIT_REVIEW_LEVEL(
		REVIEW_LEVEL_ID,
		ASSIGN_DT,
		COMPLT_DT,
		INDEMNIFICATION_TYPE_ID,
		ITERATION_NUMBER,
		NOTES,
		ORIGINAL_REVIEWER_PERSONNEL_ID,
		REVIEW_ID,
		RVW_STARTED_DT_TM,
		REVIEWER_PERSONNEL_ID,
		CREATED_BY,
		UPDATED_BY,
		CREATED_TS,
		UPDATED_TS,
		DUE_DATE,
		REVIEW_LEVEL_TYPE_ID,
		REVIEW_LOCATION_ID,
		REVIEW_LEVEL_STATUS_ID,
		RATING_ID,
		VETTING_IND,
		VETTEE_ACKNOWLEDGEMENT_DT,
		REASSIGNMENT_REASON_ID,
		AUDIT_CREATED_TS,
		AUDIT_ACTION_CODE)	
	select 
		REVIEW_LEVEL_ID,
		ASSIGN_DT,
		COMPLT_DT,
		INDEMNIFICATION_TYPE_ID,
		ITERATION_NUMBER,
		NOTES,
		ORIGINAL_REVIEWER_PERSONNEL_ID,
		REVIEW_ID,
		RVW_STARTED_DT_TM,
		REVIEWER_PERSONNEL_ID,
		CREATED_BY,
		UPDATED_BY,
		CREATED_TS,
		UPDATED_TS,
		DUE_DATE,
		REVIEW_LEVEL_TYPE_ID,
		REVIEW_LOCATION_ID,
		REVIEW_LEVEL_STATUS_ID,
		RATING_ID,
		VETTING_IND,
		VETTEE_ACKNOWLEDGEMENT_DT,
		REASSIGNMENT_REASON_ID,
		getdate(),				
		'C'				
		from inserted
END
			]]>
		</sql>
	</changeSet>
	<changeSet context="All" author="jordanchavez" id="HUDLRS_2229_0003" objectQuotingStrategy="QUOTE_ALL_OBJECTS">
		<sql>
			<![CDATA[
ALTER TRIGGER [dbo].[tU_AUDIT_REVIEW_LEVEL] ON [dbo].[REVIEW_LEVEL] FOR update AS BEGIN
	insert into AUDIT_REVIEW_LEVEL(
		REVIEW_LEVEL_ID,
		ASSIGN_DT,
		COMPLT_DT,
		INDEMNIFICATION_TYPE_ID,
		ITERATION_NUMBER,
		NOTES,
		ORIGINAL_REVIEWER_PERSONNEL_ID,
		REVIEW_ID,
		RVW_STARTED_DT_TM,
		REVIEWER_PERSONNEL_ID,
		CREATED_BY,
		UPDATED_BY,
		CREATED_TS,
		UPDATED_TS,
		DUE_DATE,
		REVIEW_LEVEL_TYPE_ID,
		REVIEW_LOCATION_ID,
		REVIEW_LEVEL_STATUS_ID,
		RATING_ID,
		VETTING_IND,
		VETTEE_ACKNOWLEDGEMENT_DT,
		REASSIGNMENT_REASON_ID,
		AUDIT_CREATED_TS,
		AUDIT_ACTION_CODE)	
	select 
		REVIEW_LEVEL_ID,
		ASSIGN_DT,
		COMPLT_DT,
		INDEMNIFICATION_TYPE_ID,
		ITERATION_NUMBER,
		NOTES,
		ORIGINAL_REVIEWER_PERSONNEL_ID,
		REVIEW_ID,
		RVW_STARTED_DT_TM,
		REVIEWER_PERSONNEL_ID,
		CREATED_BY,
		UPDATED_BY,
		CREATED_TS,
		UPDATED_TS,
		DUE_DATE,
		REVIEW_LEVEL_TYPE_ID,
		REVIEW_LOCATION_ID,
		REVIEW_LEVEL_STATUS_ID,
		RATING_ID,
		VETTING_IND,
		VETTEE_ACKNOWLEDGEMENT_DT,
		REASSIGNMENT_REASON_ID,
		getdate(),				
		'U'				
		from inserted
END
			]]>
		</sql>
	</changeSet>
</databaseChangeLog>
